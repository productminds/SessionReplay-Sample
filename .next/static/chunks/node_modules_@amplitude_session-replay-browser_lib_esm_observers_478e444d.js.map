{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"observers.js","sourceRoot":"","sources":["file:///Users/facundoagustinpiaggio/Desktop/ProyectoInternos/Repositorios/SessionReplay-Sample/node_modules/%40amplitude/session-replay-browser/src/observers.ts"],"sourcesContent":["import { getGlobalScope } from '@amplitude/analytics-core';\n\nexport interface NetworkRequestEvent {\n  timestamp: number;\n  type: 'fetch';\n  method: string;\n  url: string;\n  status?: number;\n  duration?: number;\n  requestHeaders?: Record<string, string>;\n  responseHeaders?: Record<string, string>;\n  error?: {\n    name: string;\n    message: string;\n  };\n}\n\nexport type NetworkEventCallback = (event: NetworkRequestEvent) => void;\n\nexport class NetworkObservers {\n  private fetchObserver: (() => void) | null = null;\n  private eventCallback?: NetworkEventCallback;\n\n  start(eventCallback: NetworkEventCallback) {\n    this.eventCallback = eventCallback;\n    this.observeFetch();\n  }\n\n  stop() {\n    this.fetchObserver?.();\n    this.fetchObserver = null;\n    this.eventCallback = undefined;\n  }\n\n  protected notifyEvent(event: NetworkRequestEvent) {\n    this.eventCallback?.(event);\n  }\n\n  private observeFetch() {\n    const globalScope = getGlobalScope();\n    if (!globalScope) return;\n\n    const originalFetch = globalScope.fetch;\n    if (!originalFetch) return;\n\n    globalScope.fetch = async (input: RequestInfo | URL, init?: RequestInit) => {\n      const startTime = Date.now();\n      const requestEvent: NetworkRequestEvent = {\n        timestamp: startTime,\n        type: 'fetch',\n        method: init?.method || 'GET', // Fetch API defaulted to GET when no method is provided\n        url: input.toString(),\n        requestHeaders: init?.headers as Record<string, string>,\n      };\n\n      try {\n        const response = await originalFetch(input, init);\n        const endTime = Date.now();\n\n        requestEvent.status = response.status;\n        requestEvent.duration = endTime - startTime;\n\n        // Convert Headers\n        const headers: Record<string, string> = {};\n        response.headers.forEach((value, key) => {\n          headers[key] = value;\n        });\n        requestEvent.responseHeaders = headers;\n\n        this.notifyEvent(requestEvent);\n        return response;\n      } catch (error) {\n        const endTime = Date.now();\n        requestEvent.duration = endTime - startTime;\n\n        // Capture error information\n        const typedError = error as Error;\n        requestEvent.error = {\n          name: typedError.name || 'UnknownError',\n          message: typedError.message || 'An unknown error occurred',\n        };\n\n        this.notifyEvent(requestEvent);\n        throw error;\n      }\n    };\n\n    this.fetchObserver = () => {\n      globalScope.fetch = originalFetch;\n    };\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}