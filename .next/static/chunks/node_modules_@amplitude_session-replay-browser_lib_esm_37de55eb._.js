(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BLOCK_CLASS": (()=>BLOCK_CLASS),
    "CustomRRwebEvent": (()=>CustomRRwebEvent),
    "DEFAULT_EVENT_PROPERTY_PREFIX": (()=>DEFAULT_EVENT_PROPERTY_PREFIX),
    "DEFAULT_SAMPLE_RATE": (()=>DEFAULT_SAMPLE_RATE),
    "DEFAULT_SERVER_ZONE": (()=>DEFAULT_SERVER_ZONE),
    "DEFAULT_SESSION_END_EVENT": (()=>DEFAULT_SESSION_END_EVENT),
    "DEFAULT_SESSION_REPLAY_PROPERTY": (()=>DEFAULT_SESSION_REPLAY_PROPERTY),
    "DEFAULT_SESSION_START_EVENT": (()=>DEFAULT_SESSION_START_EVENT),
    "INTERACTION_MAX_INTERVAL": (()=>INTERACTION_MAX_INTERVAL),
    "INTERACTION_MIN_INTERVAL": (()=>INTERACTION_MIN_INTERVAL),
    "KB_SIZE": (()=>KB_SIZE),
    "MASK_TEXT_CLASS": (()=>MASK_TEXT_CLASS),
    "MAX_EVENT_LIST_SIZE_IN_BYTES": (()=>MAX_EVENT_LIST_SIZE_IN_BYTES),
    "MAX_IDB_STORAGE_LENGTH": (()=>MAX_IDB_STORAGE_LENGTH),
    "MAX_INTERVAL": (()=>MAX_INTERVAL),
    "MAX_URL_LENGTH": (()=>MAX_URL_LENGTH),
    "MIN_INTERVAL": (()=>MIN_INTERVAL),
    "SESSION_REPLAY_DEBUG_PROPERTY": (()=>SESSION_REPLAY_DEBUG_PROPERTY),
    "SESSION_REPLAY_EU_URL": (()=>SESSION_REPLAY_EU_URL),
    "SESSION_REPLAY_SERVER_URL": (()=>SESSION_REPLAY_SERVER_URL),
    "SESSION_REPLAY_STAGING_URL": (()=>SESSION_REPLAY_STAGING_URL),
    "STORAGE_PREFIX": (()=>STORAGE_PREFIX),
    "UNMASK_TEXT_CLASS": (()=>UNMASK_TEXT_CLASS)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$server$2d$zone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/server-zone.js [app-client] (ecmascript)");
;
var DEFAULT_EVENT_PROPERTY_PREFIX = '[Amplitude]';
var DEFAULT_SESSION_REPLAY_PROPERTY = "".concat(DEFAULT_EVENT_PROPERTY_PREFIX, " Session Replay ID");
var DEFAULT_SESSION_START_EVENT = 'session_start';
var DEFAULT_SESSION_END_EVENT = 'session_end';
var DEFAULT_SAMPLE_RATE = 0;
var DEFAULT_SERVER_ZONE = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$server$2d$zone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ServerZone"].US;
var SESSION_REPLAY_DEBUG_PROPERTY = "".concat(DEFAULT_EVENT_PROPERTY_PREFIX, " Session Replay Debug");
var BLOCK_CLASS = 'amp-block';
var MASK_TEXT_CLASS = 'amp-mask';
var UNMASK_TEXT_CLASS = 'amp-unmask';
var SESSION_REPLAY_SERVER_URL = 'https://api-sr.amplitude.com/sessions/v2/track';
var SESSION_REPLAY_EU_URL = 'https://api-sr.eu.amplitude.com/sessions/v2/track';
var SESSION_REPLAY_STAGING_URL = 'https://api-sr.stag2.amplitude.com/sessions/v2/track';
var STORAGE_PREFIX = "".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AMPLITUDE_PREFIX"], "_replay_unsent");
var MAX_EVENT_LIST_SIZE_IN_BYTES = 1 * 1000000; // 1 MB
var INTERACTION_MIN_INTERVAL = 30000; // 30 seconds
var INTERACTION_MAX_INTERVAL = 60000; // 1 minute
var MIN_INTERVAL = 500; // 500 ms
var MAX_INTERVAL = 10 * 1000; // 10 seconds
var MAX_IDB_STORAGE_LENGTH = 1000 * 60 * 60 * 24 * 3; // 3 days
var KB_SIZE = 1024;
var MAX_URL_LENGTH = 1000;
var CustomRRwebEvent;
(function(CustomRRwebEvent) {
    CustomRRwebEvent["GET_SR_PROPS"] = "get-sr-props";
    CustomRRwebEvent["DEBUG_INFO"] = "debug-info";
    CustomRRwebEvent["FETCH_REQUEST"] = "fetch-request";
    CustomRRwebEvent["METADATA"] = "metadata";
})(CustomRRwebEvent || (CustomRRwebEvent = {})); //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/logger.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SafeLoggerProvider": (()=>SafeLoggerProvider)
});
var SafeLoggerProvider = function() {
    function SafeLoggerProvider(loggerProvider) {
        this.logger = loggerProvider;
        this.log = this.getSafeMethod('log');
        this.warn = this.getSafeMethod('warn');
        this.error = this.getSafeMethod('error');
        this.debug = this.getSafeMethod('debug');
    }
    SafeLoggerProvider.prototype.getSafeMethod = function(method) {
        var _a;
        if (!this.logger) {
            return function() {
            // No-op function fallback
            };
        }
        var fn = this.logger[method];
        if (typeof fn === 'function') {
            var originalFn = (_a = fn.__rrweb_original__) !== null && _a !== void 0 ? _a : fn;
            return originalFn.bind(this.logger);
        }
        return function() {
        // No-op function fallback
        };
    };
    SafeLoggerProvider.prototype.enable = function(logLevel) {
        this.logger.enable(logLevel);
    };
    SafeLoggerProvider.prototype.disable = function() {
        this.logger.disable();
    };
    return SafeLoggerProvider;
}();
;
 //# sourceMappingURL=logger.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DEFAULT_MASK_LEVEL": (()=>DEFAULT_MASK_LEVEL)
});
var DEFAULT_MASK_LEVEL = 'medium'; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/utils/get-input-type.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getInputType": (()=>getInputType),
    "toLowerCase": (()=>toLowerCase)
});
function toLowerCase(str) {
    return str.toLowerCase();
}
function getInputType(element) {
    // when omitting the type of input element(e.g. <input />), the type is treated as text
    var type = element.type;
    return element.hasAttribute('data-rr-is-password') ? 'password' : type ? toLowerCase(type) : null;
} //# sourceMappingURL=get-input-type.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "generateHashCode": (()=>generateHashCode),
    "generateSessionReplayId": (()=>generateSessionReplayId),
    "getCurrentUrl": (()=>getCurrentUrl),
    "getDebugConfig": (()=>getDebugConfig),
    "getPageUrl": (()=>getPageUrl),
    "getServerUrl": (()=>getServerUrl),
    "getStorageSize": (()=>getStorageSize),
    "isSessionInSample": (()=>isSessionInSample),
    "maskFn": (()=>maskFn),
    "validateUGCFilterRules": (()=>validateUGCFilterRules)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$server$2d$zone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/server-zone.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$get$2d$input$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/utils/get-input-type.js [app-client] (ecmascript)");
;
;
;
;
;
/**
 * Light: Subset of inputs
 * Medium: All inputs
 * Conservative: All inputs and all texts
 */ var isMaskedForLevel = function(elementType, level, element) {
    switch(level){
        case 'light':
            {
                if (elementType !== 'input') {
                    return true;
                }
                var inputType = element ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$get$2d$input$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getInputType"])(element) : '';
                /* istanbul ignore if */ // TODO(lew): For some reason it's impossible to test this.
                if (!inputType) {
                    return false;
                }
                if ([
                    'password',
                    'hidden',
                    'email',
                    'tel'
                ].includes(inputType)) {
                    return true;
                }
                if (element.autocomplete.startsWith('cc-')) {
                    return true;
                }
                return false;
            }
        case 'medium':
        case 'conservative':
            return true;
        default:
            return isMaskedForLevel(elementType, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_MASK_LEVEL"], element);
    }
};
/**
 * Checks if the given element set to be masked by rrweb
 *
 * Priority is:
 *  1. [In code] Element/class based masking/unmasking <> [Config based] Selector based masking/unmasking
 *  2. Use app defaults
 */ var isMasked = function(elementType, config, element) {
    var _a, _b, _c;
    if (config === void 0) {
        config = {
            defaultMaskLevel: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_MASK_LEVEL"]
        };
    }
    if (element) {
        // Element or parent is explicitly instrumented in code to mask
        if (element.closest('.' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MASK_TEXT_CLASS"])) {
            return true;
        }
        // Config has override for mask
        var shouldMask = ((_a = config.maskSelector) !== null && _a !== void 0 ? _a : []).some(function(selector) {
            return element.closest(selector);
        });
        if (shouldMask) {
            return true;
        }
        // Code or config has override to unmask
        if (element.closest('.' + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNMASK_TEXT_CLASS"])) {
            return false;
        }
        // Here we are probably sent an element, but we want to match if they have a
        // parent with an unmask selector.
        var shouldUnmask = ((_b = config.unmaskSelector) !== null && _b !== void 0 ? _b : []).some(function(selector) {
            return element.closest(selector);
        });
        if (shouldUnmask) {
            return false;
        }
    }
    return isMaskedForLevel(elementType, (_c = config.defaultMaskLevel) !== null && _c !== void 0 ? _c : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_MASK_LEVEL"], element);
};
var maskFn = function(elementType, config) {
    return function(text, element) {
        return isMasked(elementType, config, element) ? text.replace(/[^\s]/g, '*') : text;
    };
};
var generateHashCode = function(str) {
    var hash = 0;
    if (str.length === 0) return hash;
    for(var i = 0; i < str.length; i++){
        var chr = str.charCodeAt(i);
        hash = (hash << 5) - hash + chr;
        hash |= 0;
    }
    return hash;
};
var isSessionInSample = function(sessionId, sampleRate) {
    var hashNumber = generateHashCode(sessionId.toString());
    var absHash = Math.abs(hashNumber);
    var absHashMultiply = absHash * 31;
    var mod = absHashMultiply % 1000000;
    return mod / 1000000 < sampleRate;
};
var getCurrentUrl = function() {
    var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
    return (globalScope === null || globalScope === void 0 ? void 0 : globalScope.location) ? globalScope.location.href : '';
};
var generateSessionReplayId = function(sessionId, deviceId) {
    return "".concat(deviceId, "/").concat(sessionId);
};
var getServerUrl = function(serverZone, trackServerUrl) {
    if (trackServerUrl) {
        return trackServerUrl;
    }
    if (serverZone === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$server$2d$zone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ServerZone"].STAGING) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SESSION_REPLAY_STAGING_URL"];
    }
    if (serverZone === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$server$2d$zone$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ServerZone"].EU) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SESSION_REPLAY_EU_URL"];
    }
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SESSION_REPLAY_SERVER_URL"];
};
var isValidGlobUrl = function(globUrl) {
    if (typeof globUrl !== 'string' || globUrl.trim() === '') return false;
    var urlPattern = /^\/|^https?:\/\/[^\s]+$/;
    if (!urlPattern.test(globUrl)) return false;
    return true;
};
var globToRegex = function(glob) {
    // Escape special regex characters, then convert globs
    var escaped = glob.replace(/[.+^${}()|[\]\\]/g, '\\$&') // Escape regex specials
    .replace(/\*/g, '.*') // Convert * to .*
    .replace(/\?/g, '.'); // Convert ? to .
    return new RegExp("^".concat(escaped, "$"));
};
var validateUGCFilterRules = function(ugcFilterRules) {
    // validate ugcFilterRules
    if (!ugcFilterRules.every(function(rule) {
        return typeof rule.selector === 'string' && typeof rule.replacement === 'string';
    })) {
        throw new Error('ugcFilterRules must be an array of objects with selector and replacement properties');
    }
    // validate ugcFilterRules are valid globs
    if (!ugcFilterRules.every(function(rule) {
        return isValidGlobUrl(rule.selector);
    })) {
        throw new Error('ugcFilterRules must be an array of objects with valid globs');
    }
};
var getPageUrl = function(pageUrl, ugcFilterRules) {
    var e_1, _a;
    try {
        // apply ugcFilterRules, order is important, first rule wins
        for(var ugcFilterRules_1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(ugcFilterRules), ugcFilterRules_1_1 = ugcFilterRules_1.next(); !ugcFilterRules_1_1.done; ugcFilterRules_1_1 = ugcFilterRules_1.next()){
            var rule = ugcFilterRules_1_1.value;
            var regex = globToRegex(rule.selector);
            if (regex.test(pageUrl)) {
                return pageUrl.replace(regex, rule.replacement);
            }
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally{
        try {
            if (ugcFilterRules_1_1 && !ugcFilterRules_1_1.done && (_a = ugcFilterRules_1.return)) _a.call(ugcFilterRules_1);
        } finally{
            if (e_1) throw e_1.error;
        }
    }
    return pageUrl;
};
var getStorageSize = function() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
        var globalScope, _a, usage, quota, usageDetails, totalStorageSize, percentOfQuota, e_2;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
            switch(_b.label){
                case 0:
                    _b.trys.push([
                        0,
                        3,
                        ,
                        4
                    ]);
                    globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
                    if (!globalScope) return [
                        3 /*break*/ ,
                        2
                    ];
                    return [
                        4 /*yield*/ ,
                        globalScope.navigator.storage.estimate()
                    ];
                case 1:
                    _a = _b.sent(), usage = _a.usage, quota = _a.quota, usageDetails = _a.usageDetails;
                    totalStorageSize = usage ? Math.round(usage / __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KB_SIZE"]) : 0;
                    percentOfQuota = usage && quota ? Math.round((usage / quota + Number.EPSILON) * 1000) / 1000 : 0;
                    return [
                        2 /*return*/ ,
                        {
                            totalStorageSize: totalStorageSize,
                            percentOfQuota: percentOfQuota,
                            usageDetails: JSON.stringify(usageDetails)
                        }
                    ];
                case 2:
                    return [
                        3 /*break*/ ,
                        4
                    ];
                case 3:
                    e_2 = _b.sent();
                    return [
                        3 /*break*/ ,
                        4
                    ];
                case 4:
                    return [
                        2 /*return*/ ,
                        {
                            totalStorageSize: 0,
                            percentOfQuota: 0,
                            usageDetails: ''
                        }
                    ];
            }
        });
    });
};
var getDebugConfig = function(config) {
    var debugConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, config);
    var apiKey = debugConfig.apiKey;
    debugConfig.apiKey = "****".concat(apiKey.substring(apiKey.length - 4));
    return debugConfig;
}; //# sourceMappingURL=helpers.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/local-config.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionReplayLocalConfig": (()=>SessionReplayLocalConfig),
    "getDefaultConfig": (()=>getDefaultConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$transports$2f$fetch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/transports/fetch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$loglevel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/loglevel.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
;
;
;
;
;
var getDefaultConfig = function() {
    return {
        flushMaxRetries: 2,
        logLevel: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$loglevel$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["LogLevel"].Warn,
        loggerProvider: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"](),
        transportProvider: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$transports$2f$fetch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FetchTransport"]()
    };
};
var SessionReplayLocalConfig = function(_super) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__extends"])(SessionReplayLocalConfig, _super);
    function SessionReplayLocalConfig(apiKey, options) {
        var _this = this;
        var _a, _b;
        var defaultConfig = getDefaultConfig();
        _this = _super.call(this, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({
            transportProvider: defaultConfig.transportProvider,
            loggerProvider: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SafeLoggerProvider"](options.loggerProvider || defaultConfig.loggerProvider)
        }, options), {
            apiKey: apiKey
        })) || this;
        _this.flushMaxRetries = options.flushMaxRetries !== undefined && options.flushMaxRetries <= defaultConfig.flushMaxRetries ? options.flushMaxRetries : defaultConfig.flushMaxRetries;
        _this.apiKey = apiKey;
        _this.sampleRate = options.sampleRate || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_SAMPLE_RATE"];
        _this.serverZone = options.serverZone || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_SERVER_ZONE"];
        _this.configServerUrl = options.configServerUrl;
        _this.trackServerUrl = options.trackServerUrl;
        _this.shouldInlineStylesheet = options.shouldInlineStylesheet;
        _this.version = options.version;
        _this.performanceConfig = options.performanceConfig;
        _this.storeType = (_a = options.storeType) !== null && _a !== void 0 ? _a : 'idb';
        _this.applyBackgroundColorToBlockedElements = (_b = options.applyBackgroundColorToBlockedElements) !== null && _b !== void 0 ? _b : false;
        if (options.privacyConfig) {
            _this.privacyConfig = options.privacyConfig;
        }
        if (options.interactionConfig) {
            _this.interactionConfig = options.interactionConfig;
            // validate ugcFilterRules, throw error if invalid - throw error at the beginning of the config
            if (_this.interactionConfig.ugcFilterRules) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateUGCFilterRules"])(_this.interactionConfig.ugcFilterRules);
            }
        }
        if (options.debugMode) {
            _this.debugMode = options.debugMode;
        }
        if (options.experimental) {
            _this.experimental = options.experimental;
        }
        return _this;
    }
    return SessionReplayLocalConfig;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Config"]);
;
 //# sourceMappingURL=local-config.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/joined-config.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionReplayJoinedConfigGenerator": (()=>SessionReplayJoinedConfigGenerator),
    "createSessionReplayJoinedConfigGenerator": (()=>createSessionReplayJoinedConfigGenerator),
    "removeInvalidSelectorsFromPrivacyConfig": (()=>removeInvalidSelectorsFromPrivacyConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$node_modules$2f40$amplitude$2f$analytics$2d$remote$2d$config$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/node_modules/@amplitude/analytics-remote-config/lib/esm/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$local$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/local-config.js [app-client] (ecmascript)");
;
;
;
;
var removeInvalidSelectorsFromPrivacyConfig = function(privacyConfig, loggerProvider) {
    // This allows us to not search the DOM.
    var fragment = document.createDocumentFragment();
    var dropInvalidSelectors = function(selectors) {
        if (selectors === void 0) {
            selectors = [];
        }
        if (typeof selectors === 'string') {
            selectors = [
                selectors
            ];
        }
        selectors = selectors.filter(function(selector) {
            try {
                fragment.querySelector(selector);
            } catch (_a) {
                loggerProvider.warn("[session-replay-browser] omitting selector \"".concat(selector, "\" because it is invalid"));
                return false;
            }
            return true;
        });
        if (selectors.length === 0) {
            return undefined;
        }
        return selectors;
    };
    privacyConfig.blockSelector = dropInvalidSelectors(privacyConfig.blockSelector);
    privacyConfig.maskSelector = dropInvalidSelectors(privacyConfig.maskSelector);
    privacyConfig.unmaskSelector = dropInvalidSelectors(privacyConfig.unmaskSelector);
    return privacyConfig;
};
var SessionReplayJoinedConfigGenerator = function() {
    function SessionReplayJoinedConfigGenerator(remoteConfigFetch, localConfig) {
        this.localConfig = localConfig;
        this.remoteConfigFetch = remoteConfigFetch;
    }
    SessionReplayJoinedConfigGenerator.prototype.generateJoinedConfig = function(sessionId) {
        var _a, _b, _c, _d;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var config, remoteConfig, samplingConfig_1, privacyConfig, ugcFilterRules, _e, _f, err_1, knownError, samplingConfig, remotePrivacyConfig, localPrivacyConfig, joinedPrivacyConfig, privacyConfigSelectorMap, selectorMap, _g, _h, _j, selector, selectorType;
            var e_1, _k;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_l) {
                switch(_l.label){
                    case 0:
                        config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, this.localConfig);
                        // Special case here as optOut is implemented via getter/setter
                        config.optOut = this.localConfig.optOut;
                        // We always want captureEnabled to be true, unless there's an override
                        // in the remote config.
                        config.captureEnabled = true;
                        _l.label = 1;
                    case 1:
                        _l.trys.push([
                            1,
                            6,
                            ,
                            7
                        ]);
                        return [
                            4 /*yield*/ ,
                            this.remoteConfigFetch.getRemoteConfig('sessionReplay', 'sr_sampling_config', sessionId)
                        ];
                    case 2:
                        samplingConfig_1 = _l.sent();
                        return [
                            4 /*yield*/ ,
                            this.remoteConfigFetch.getRemoteConfig('sessionReplay', 'sr_privacy_config', sessionId)
                        ];
                    case 3:
                        privacyConfig = _l.sent();
                        ugcFilterRules = (_a = config.interactionConfig) === null || _a === void 0 ? void 0 : _a.ugcFilterRules;
                        // This is intentionally forced to only be set through the remote config.
                        _e = config;
                        return [
                            4 /*yield*/ ,
                            this.remoteConfigFetch.getRemoteConfig('sessionReplay', 'sr_interaction_config', sessionId)
                        ];
                    case 4:
                        // This is intentionally forced to only be set through the remote config.
                        _e.interactionConfig = _l.sent();
                        if (config.interactionConfig && ugcFilterRules) {
                            config.interactionConfig.ugcFilterRules = ugcFilterRules;
                        }
                        // This is intentionally forced to only be set through the remote config.
                        _f = config;
                        return [
                            4 /*yield*/ ,
                            this.remoteConfigFetch.getRemoteConfig('sessionReplay', 'sr_logging_config', sessionId)
                        ];
                    case 5:
                        // This is intentionally forced to only be set through the remote config.
                        _f.loggingConfig = _l.sent();
                        if (samplingConfig_1 || privacyConfig) {
                            remoteConfig = {};
                            if (samplingConfig_1) {
                                remoteConfig.sr_sampling_config = samplingConfig_1;
                            }
                            if (privacyConfig) {
                                remoteConfig.sr_privacy_config = privacyConfig;
                            }
                        }
                        return [
                            3 /*break*/ ,
                            7
                        ];
                    case 6:
                        err_1 = _l.sent();
                        knownError = err_1;
                        this.localConfig.loggerProvider.warn(knownError.message);
                        config.captureEnabled = false;
                        return [
                            3 /*break*/ ,
                            7
                        ];
                    case 7:
                        if (!remoteConfig) {
                            return [
                                2 /*return*/ ,
                                {
                                    localConfig: this.localConfig,
                                    joinedConfig: config,
                                    remoteConfig: remoteConfig
                                }
                            ];
                        }
                        samplingConfig = remoteConfig.sr_sampling_config, remotePrivacyConfig = remoteConfig.sr_privacy_config;
                        if (samplingConfig && Object.keys(samplingConfig).length > 0) {
                            if (Object.prototype.hasOwnProperty.call(samplingConfig, 'capture_enabled')) {
                                config.captureEnabled = samplingConfig.capture_enabled;
                            } else {
                                config.captureEnabled = false;
                            }
                            if (Object.prototype.hasOwnProperty.call(samplingConfig, 'sample_rate')) {
                                config.sampleRate = samplingConfig.sample_rate;
                            }
                        } else {
                            // If config API response was valid (ie 200), but no config returned, assume that
                            // customer has not yet set up config, and use sample rate from SDK options,
                            // allowing for immediate replay capture
                            config.captureEnabled = true;
                            this.localConfig.loggerProvider.debug('Remote config successfully fetched, but no values set for project, Session Replay capture enabled.');
                        }
                        // Remote config join acts somewhat like a left join between the remote and the local
                        // config. That is, remote config has precedence over local values as with sampling.
                        // However, non conflicting values will be added to the lists.
                        // Here's an example to illustrate:
                        //
                        // Remote config:   {'.selector1': 'MASK',   '.selector2': 'UNMASK'}
                        // Local config:    {'.selector1': 'UNMASK',                         '.selector3': 'MASK'}
                        //
                        // Resolved config: {'.selector1': 'MASK',   '.selector2': 'UNMASK', '.selector3': 'MASK'}
                        // config.privacyConfig = {
                        //   ...(config.privacyConfig ?? {}),
                        //   ...remotePrivacyConfig,
                        // };
                        if (remotePrivacyConfig) {
                            localPrivacyConfig = (_b = config.privacyConfig) !== null && _b !== void 0 ? _b : {};
                            joinedPrivacyConfig = {
                                defaultMaskLevel: (_d = (_c = remotePrivacyConfig.defaultMaskLevel) !== null && _c !== void 0 ? _c : localPrivacyConfig.defaultMaskLevel) !== null && _d !== void 0 ? _d : 'medium',
                                blockSelector: [],
                                maskSelector: [],
                                unmaskSelector: []
                            };
                            privacyConfigSelectorMap = function(privacyConfig) {
                                var e_2, _a, e_3, _b, e_4, _c;
                                var _d, _e, _f;
                                var selectorMap = {};
                                if (typeof privacyConfig.blockSelector === 'string') {
                                    privacyConfig.blockSelector = [
                                        privacyConfig.blockSelector
                                    ];
                                }
                                try {
                                    for(var _g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])((_d = privacyConfig.blockSelector) !== null && _d !== void 0 ? _d : []), _h = _g.next(); !_h.done; _h = _g.next()){
                                        var selector = _h.value;
                                        selectorMap[selector] = 'block';
                                    }
                                } catch (e_2_1) {
                                    e_2 = {
                                        error: e_2_1
                                    };
                                } finally{
                                    try {
                                        if (_h && !_h.done && (_a = _g.return)) _a.call(_g);
                                    } finally{
                                        if (e_2) throw e_2.error;
                                    }
                                }
                                try {
                                    for(var _j = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])((_e = privacyConfig.maskSelector) !== null && _e !== void 0 ? _e : []), _k = _j.next(); !_k.done; _k = _j.next()){
                                        var selector = _k.value;
                                        selectorMap[selector] = 'mask';
                                    }
                                } catch (e_3_1) {
                                    e_3 = {
                                        error: e_3_1
                                    };
                                } finally{
                                    try {
                                        if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
                                    } finally{
                                        if (e_3) throw e_3.error;
                                    }
                                }
                                try {
                                    for(var _l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])((_f = privacyConfig.unmaskSelector) !== null && _f !== void 0 ? _f : []), _m = _l.next(); !_m.done; _m = _l.next()){
                                        var selector = _m.value;
                                        selectorMap[selector] = 'unmask';
                                    }
                                } catch (e_4_1) {
                                    e_4 = {
                                        error: e_4_1
                                    };
                                } finally{
                                    try {
                                        if (_m && !_m.done && (_c = _l.return)) _c.call(_l);
                                    } finally{
                                        if (e_4) throw e_4.error;
                                    }
                                }
                                return selectorMap;
                            };
                            selectorMap = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, privacyConfigSelectorMap(localPrivacyConfig)), privacyConfigSelectorMap(remotePrivacyConfig));
                            try {
                                for(_g = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(Object.entries(selectorMap)), _h = _g.next(); !_h.done; _h = _g.next()){
                                    _j = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(_h.value, 2), selector = _j[0], selectorType = _j[1];
                                    if (selectorType === 'mask') {
                                        joinedPrivacyConfig.maskSelector.push(selector);
                                    } else if (selectorType === 'block') {
                                        joinedPrivacyConfig.blockSelector.push(selector);
                                    } else if (selectorType === 'unmask') {
                                        joinedPrivacyConfig.unmaskSelector.push(selector);
                                    }
                                }
                            } catch (e_1_1) {
                                e_1 = {
                                    error: e_1_1
                                };
                            } finally{
                                try {
                                    if (_h && !_h.done && (_k = _g.return)) _k.call(_g);
                                } finally{
                                    if (e_1) throw e_1.error;
                                }
                            }
                            config.privacyConfig = removeInvalidSelectorsFromPrivacyConfig(joinedPrivacyConfig, this.localConfig.loggerProvider);
                        }
                        this.localConfig.loggerProvider.debug(JSON.stringify({
                            name: 'session replay joined config',
                            config: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDebugConfig"])(config)
                        }, null, 2));
                        return [
                            2 /*return*/ ,
                            {
                                localConfig: this.localConfig,
                                joinedConfig: config,
                                remoteConfig: remoteConfig
                            }
                        ];
                }
            });
        });
    };
    return SessionReplayJoinedConfigGenerator;
}();
;
var createSessionReplayJoinedConfigGenerator = function(apiKey, options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
        var localConfig, remoteConfigFetch;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
            switch(_a.label){
                case 0:
                    localConfig = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$local$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionReplayLocalConfig"](apiKey, options);
                    return [
                        4 /*yield*/ ,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$node_modules$2f40$amplitude$2f$analytics$2d$remote$2d$config$2f$lib$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createRemoteConfigFetch"])({
                            localConfig: localConfig,
                            configKeys: [
                                'sessionReplay'
                            ]
                        })
                    ];
                case 1:
                    remoteConfigFetch = _a.sent();
                    return [
                        2 /*return*/ ,
                        new SessionReplayJoinedConfigGenerator(remoteConfigFetch, localConfig)
                    ];
            }
        });
    });
}; //# sourceMappingURL=joined-config.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/messages.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MAX_RETRIES_EXCEEDED_MESSAGE": (()=>MAX_RETRIES_EXCEEDED_MESSAGE),
    "MISSING_API_KEY_MESSAGE": (()=>MISSING_API_KEY_MESSAGE),
    "MISSING_DEVICE_ID_MESSAGE": (()=>MISSING_DEVICE_ID_MESSAGE),
    "STORAGE_FAILURE": (()=>STORAGE_FAILURE),
    "UNEXPECTED_ERROR_MESSAGE": (()=>UNEXPECTED_ERROR_MESSAGE),
    "UNEXPECTED_NETWORK_ERROR_MESSAGE": (()=>UNEXPECTED_NETWORK_ERROR_MESSAGE)
});
var UNEXPECTED_ERROR_MESSAGE = 'Unexpected error occurred';
var UNEXPECTED_NETWORK_ERROR_MESSAGE = 'Network error occurred, event batch rejected';
var MAX_RETRIES_EXCEEDED_MESSAGE = 'Session replay event batch rejected due to exceeded retry count';
var STORAGE_FAILURE = 'Failed to store session replay events in IndexedDB';
var MISSING_DEVICE_ID_MESSAGE = 'Session replay event batch not sent due to missing device ID';
var MISSING_API_KEY_MESSAGE = 'Session replay event batch not sent due to missing api key'; //# sourceMappingURL=messages.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/version.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// Autogenerated by `yarn version-file`. DO NOT EDIT
__turbopack_context__.s({
    "VERSION": (()=>VERSION)
});
var VERSION = '1.25.1'; //# sourceMappingURL=version.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/track-destination.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionReplayTrackDestination": (()=>SessionReplayTrackDestination)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$transports$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/transports/base.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$status$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/status.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/messages.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/version.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)");
;
;
;
;
;
;
var SessionReplayTrackDestination = function() {
    function SessionReplayTrackDestination(_a) {
        var trackServerUrl = _a.trackServerUrl, loggerProvider = _a.loggerProvider, payloadBatcher = _a.payloadBatcher;
        this.storageKey = '';
        this.retryTimeout = 1000;
        this.scheduled = null;
        this.queue = [];
        this.loggerProvider = loggerProvider;
        this.payloadBatcher = payloadBatcher ? payloadBatcher : function(payload) {
            return payload;
        };
        this.trackServerUrl = trackServerUrl;
    }
    SessionReplayTrackDestination.prototype.sendEventsList = function(destinationData) {
        this.addToQueue((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, destinationData), {
            attempts: 0,
            timeout: 0
        }));
    };
    SessionReplayTrackDestination.prototype.addToQueue = function() {
        var _this = this;
        var list = [];
        for(var _i = 0; _i < arguments.length; _i++){
            list[_i] = arguments[_i];
        }
        var tryable = list.filter(function(context) {
            if (context.attempts < (context.flushMaxRetries || 0)) {
                context.attempts += 1;
                return true;
            }
            _this.completeRequest({
                context: context,
                err: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_RETRIES_EXCEEDED_MESSAGE"]
            });
            return false;
        });
        tryable.forEach(function(context) {
            _this.queue = _this.queue.concat(context);
            if (context.timeout === 0) {
                _this.schedule(0);
                return;
            }
            setTimeout(function() {
                context.timeout = 0;
                _this.schedule(0);
            }, context.timeout);
        });
    };
    SessionReplayTrackDestination.prototype.schedule = function(timeout) {
        var _this = this;
        if (this.scheduled) return;
        this.scheduled = setTimeout(function() {
            void _this.flush(true).then(function() {
                if (_this.queue.length > 0) {
                    _this.schedule(timeout);
                }
            });
        }, timeout);
    };
    SessionReplayTrackDestination.prototype.flush = function(useRetry) {
        if (useRetry === void 0) {
            useRetry = false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var list, later;
            var _this = this;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        list = [];
                        later = [];
                        this.queue.forEach(function(context) {
                            return context.timeout === 0 ? list.push(context) : later.push(context);
                        });
                        this.queue = later;
                        if (this.scheduled) {
                            clearTimeout(this.scheduled);
                            this.scheduled = null;
                        }
                        return [
                            4 /*yield*/ ,
                            Promise.all(list.map(function(context) {
                                return _this.send(context, useRetry);
                            }))
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplayTrackDestination.prototype.send = function(context, useRetry) {
        var _a, _b;
        if (useRetry === void 0) {
            useRetry = true;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var apiKey, deviceId, url, version, sampleRate, urlParams, sessionReplayLibrary, payload, options, serverUrl, res, responseBody, e_1;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_c) {
                switch(_c.label){
                    case 0:
                        apiKey = context.apiKey;
                        if (!apiKey) {
                            return [
                                2 /*return*/ ,
                                this.completeRequest({
                                    context: context,
                                    err: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MISSING_API_KEY_MESSAGE"]
                                })
                            ];
                        }
                        deviceId = context.deviceId;
                        if (!deviceId) {
                            return [
                                2 /*return*/ ,
                                this.completeRequest({
                                    context: context,
                                    err: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MISSING_DEVICE_ID_MESSAGE"]
                                })
                            ];
                        }
                        url = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getCurrentUrl"])();
                        version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VERSION"];
                        sampleRate = context.sampleRate;
                        urlParams = new URLSearchParams({
                            device_id: deviceId,
                            session_id: "".concat(context.sessionId),
                            type: "".concat(context.type)
                        });
                        sessionReplayLibrary = "".concat(((_a = context.version) === null || _a === void 0 ? void 0 : _a.type) || 'standalone', "/").concat(((_b = context.version) === null || _b === void 0 ? void 0 : _b.version) || version);
                        payload = this.payloadBatcher({
                            version: 1,
                            events: context.events
                        });
                        if (payload.events.length === 0) {
                            this.completeRequest({
                                context: context
                            });
                            return [
                                2 /*return*/ 
                            ];
                        }
                        _c.label = 1;
                    case 1:
                        _c.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        options = {
                            headers: {
                                'Content-Type': 'application/json',
                                Accept: '*/*',
                                Authorization: "Bearer ".concat(apiKey),
                                'X-Client-Version': version,
                                'X-Client-Library': sessionReplayLibrary,
                                'X-Client-Url': url.substring(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_URL_LENGTH"]),
                                'X-Client-Sample-Rate': "".concat(sampleRate)
                            },
                            body: JSON.stringify(payload),
                            method: 'POST'
                        };
                        serverUrl = "".concat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getServerUrl"])(context.serverZone, this.trackServerUrl), "?").concat(urlParams.toString());
                        return [
                            4 /*yield*/ ,
                            fetch(serverUrl, options)
                        ];
                    case 2:
                        res = _c.sent();
                        if (res === null) {
                            this.completeRequest({
                                context: context,
                                err: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNEXPECTED_ERROR_MESSAGE"]
                            });
                            return [
                                2 /*return*/ 
                            ];
                        }
                        if (!useRetry) {
                            responseBody = '';
                            try {
                                responseBody = JSON.stringify(res.body, null, 2);
                            } catch (_d) {
                            // to avoid crash, but don't care about the error, add comment to avoid empty block lint error
                            }
                            this.completeRequest({
                                context: context,
                                success: "".concat(res.status, ": ").concat(responseBody)
                            });
                        } else {
                            this.handleReponse(res.status, context);
                        }
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 3:
                        e_1 = _c.sent();
                        this.completeRequest({
                            context: context,
                            err: e_1
                        });
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplayTrackDestination.prototype.handleReponse = function(status, context) {
        var parsedStatus = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$transports$2f$base$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseTransport"]().buildStatus(status);
        switch(parsedStatus){
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$status$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Status"].Success:
                this.handleSuccessResponse(context);
                break;
            case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$status$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Status"].Failed:
                this.handleOtherResponse(context);
                break;
            default:
                this.completeRequest({
                    context: context,
                    err: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["UNEXPECTED_NETWORK_ERROR_MESSAGE"]
                });
        }
    };
    SessionReplayTrackDestination.prototype.handleSuccessResponse = function(context) {
        var sizeOfEventsList = Math.round(new Blob(context.events).size / __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["KB_SIZE"]);
        this.completeRequest({
            context: context,
            success: "Session replay event batch tracked successfully for session id ".concat(context.sessionId, ", size of events: ").concat(sizeOfEventsList, " KB")
        });
    };
    SessionReplayTrackDestination.prototype.handleOtherResponse = function(context) {
        this.addToQueue((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, context), {
            timeout: context.attempts * this.retryTimeout
        }));
    };
    SessionReplayTrackDestination.prototype.completeRequest = function(_a) {
        var context = _a.context, err = _a.err, success = _a.success;
        void context.onComplete();
        if (err) {
            this.loggerProvider.warn(err);
        } else if (success) {
            this.loggerProvider.log(success);
        }
    };
    return SessionReplayTrackDestination;
}();
;
 //# sourceMappingURL=track-destination.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/base-events-store.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BaseEventsStore": (()=>BaseEventsStore)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)");
;
var BaseEventsStore = function() {
    function BaseEventsStore(args) {
        var _this = this;
        var _a, _b, _c;
        this.minInterval = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MIN_INTERVAL"];
        this.maxInterval = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_INTERVAL"];
        this.maxPersistedEventsSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MAX_EVENT_LIST_SIZE_IN_BYTES"];
        this.interval = this.minInterval;
        this._timeAtLastSplit = Date.now(); // Initialize this so we have a point of comparison when events are recorded
        /**
         * Determines whether to send the events list to the backend and start a new
         * empty events list, based on the size of the list as well as the last time sent
         * @param nextEventString
         * @returns boolean
         */ this.shouldSplitEventsList = function(events, nextEventString) {
            var sizeOfNextEvent = new Blob([
                nextEventString
            ]).size;
            var sizeOfEventsList = new Blob(events).size;
            if (sizeOfEventsList + sizeOfNextEvent >= _this.maxPersistedEventsSize) {
                return true;
            }
            if (Date.now() - _this.timeAtLastSplit > _this.interval && events.length) {
                _this.interval = Math.min(_this.maxInterval, _this.interval + _this.minInterval);
                _this._timeAtLastSplit = Date.now();
                return true;
            }
            return false;
        };
        this.loggerProvider = args.loggerProvider;
        this.minInterval = (_a = args.minInterval) !== null && _a !== void 0 ? _a : this.minInterval;
        this.maxInterval = (_b = args.maxInterval) !== null && _b !== void 0 ? _b : this.maxInterval;
        this.maxPersistedEventsSize = (_c = args.maxPersistedEventsSize) !== null && _c !== void 0 ? _c : this.maxPersistedEventsSize;
    }
    Object.defineProperty(BaseEventsStore.prototype, "timeAtLastSplit", {
        get: function() {
            return this._timeAtLastSplit;
        },
        enumerable: false,
        configurable: true
    });
    return BaseEventsStore;
}();
;
 //# sourceMappingURL=base-events-store.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/legacy-idb-types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "RecordingStatus": (()=>RecordingStatus)
});
var RecordingStatus;
(function(RecordingStatus) {
    RecordingStatus["RECORDING"] = "recording";
    RecordingStatus["SENT"] = "sent";
})(RecordingStatus || (RecordingStatus = {})); //# sourceMappingURL=legacy-idb-types.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-idb-store.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionReplayEventsIDBStore": (()=>SessionReplayEventsIDBStore),
    "createStore": (()=>createStore),
    "currentSequenceKey": (()=>currentSequenceKey),
    "defineObjectStores": (()=>defineObjectStores),
    "keyValDatabaseExists": (()=>keyValDatabaseExists),
    "remoteConfigKey": (()=>remoteConfigKey),
    "sequencesToSendKey": (()=>sequencesToSendKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/types/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$idb$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/idb/build/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/messages.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$base$2d$events$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/base-events-store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$legacy$2d$idb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/legacy-idb-types.js [app-client] (ecmascript)");
;
;
;
;
;
;
var currentSequenceKey = 'sessionCurrentSequence';
var sequencesToSendKey = 'sequencesToSend';
var remoteConfigKey = 'remoteConfig';
var keyValDatabaseExists = function() {
    var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
    return new Promise(function(resolve, reject) {
        if (!globalScope) {
            return reject(new Error('Global scope not found'));
        }
        if (!globalScope.indexedDB) {
            return reject(new Error('Session Replay: cannot find indexedDB'));
        }
        try {
            var request_1 = globalScope.indexedDB.open('keyval-store');
            request_1.onupgradeneeded = function() {
                if (request_1.result.version === 1) {
                    request_1.result.close();
                    request_1.transaction && request_1.transaction.abort();
                    globalScope.indexedDB.deleteDatabase('keyval-store');
                    resolve();
                }
            };
            request_1.onsuccess = function() {
                resolve(request_1.result);
            };
            request_1.onerror = function() {
                reject(request_1.error);
            };
        } catch (e) {
            reject(e);
        }
    });
};
var batchPromiseAll = function(promiseBatch) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
        var chunkSize, batch;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
            switch(_a.label){
                case 0:
                    if (!(promiseBatch.length > 0)) return [
                        3 /*break*/ ,
                        2
                    ];
                    chunkSize = 10;
                    batch = promiseBatch.splice(0, chunkSize);
                    return [
                        4 /*yield*/ ,
                        Promise.all(batch)
                    ];
                case 1:
                    _a.sent();
                    return [
                        3 /*break*/ ,
                        0
                    ];
                case 2:
                    return [
                        2 /*return*/ 
                    ];
            }
        });
    });
};
var defineObjectStores = function(db) {
    var sequencesStore;
    var currentSequenceStore;
    if (!db.objectStoreNames.contains(currentSequenceKey)) {
        currentSequenceStore = db.createObjectStore(currentSequenceKey, {
            keyPath: 'sessionId'
        });
    }
    if (!db.objectStoreNames.contains(sequencesToSendKey)) {
        sequencesStore = db.createObjectStore(sequencesToSendKey, {
            keyPath: 'sequenceId',
            autoIncrement: true
        });
        sequencesStore.createIndex('sessionId', 'sessionId');
    }
    return {
        sequencesStore: sequencesStore,
        currentSequenceStore: currentSequenceStore
    };
};
var createStore = function(dbName) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
            switch(_a.label){
                case 0:
                    return [
                        4 /*yield*/ ,
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$idb$2f$build$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["openDB"])(dbName, 1, {
                            upgrade: defineObjectStores
                        })
                    ];
                case 1:
                    return [
                        2 /*return*/ ,
                        _a.sent()
                    ];
            }
        });
    });
};
var SessionReplayEventsIDBStore = function(_super) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__extends"])(SessionReplayEventsIDBStore, _super);
    function SessionReplayEventsIDBStore(args) {
        var _this = _super.call(this, args) || this;
        _this.getSequencesToSend = function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var sequences, cursor, _a, sessionId, events, e_1;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
                    switch(_b.label){
                        case 0:
                            _b.trys.push([
                                0,
                                5,
                                ,
                                6
                            ]);
                            sequences = [];
                            return [
                                4 /*yield*/ ,
                                this.db.transaction('sequencesToSend').store.openCursor()
                            ];
                        case 1:
                            cursor = _b.sent();
                            _b.label = 2;
                        case 2:
                            if (!cursor) return [
                                3 /*break*/ ,
                                4
                            ];
                            _a = cursor.value, sessionId = _a.sessionId, events = _a.events;
                            sequences.push({
                                events: events,
                                sequenceId: cursor.key,
                                sessionId: sessionId
                            });
                            return [
                                4 /*yield*/ ,
                                cursor.continue()
                            ];
                        case 3:
                            cursor = _b.sent();
                            return [
                                3 /*break*/ ,
                                2
                            ];
                        case 4:
                            return [
                                2 /*return*/ ,
                                sequences
                            ];
                        case 5:
                            e_1 = _b.sent();
                            this.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_1));
                            return [
                                3 /*break*/ ,
                                6
                            ];
                        case 6:
                            return [
                                2 /*return*/ ,
                                undefined
                            ];
                    }
                });
            });
        };
        _this.storeCurrentSequence = function(sessionId) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var currentSequenceData, sequenceId, e_2;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            _a.trys.push([
                                0,
                                4,
                                ,
                                5
                            ]);
                            return [
                                4 /*yield*/ ,
                                this.db.get(currentSequenceKey, sessionId)
                            ];
                        case 1:
                            currentSequenceData = _a.sent();
                            if (!currentSequenceData) {
                                return [
                                    2 /*return*/ ,
                                    undefined
                                ];
                            }
                            return [
                                4 /*yield*/ ,
                                this.db.put(sequencesToSendKey, {
                                    sessionId: sessionId,
                                    events: currentSequenceData.events
                                })
                            ];
                        case 2:
                            sequenceId = _a.sent();
                            return [
                                4 /*yield*/ ,
                                this.db.put(currentSequenceKey, {
                                    sessionId: sessionId,
                                    events: []
                                })
                            ];
                        case 3:
                            _a.sent();
                            return [
                                2 /*return*/ ,
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, currentSequenceData), {
                                    sessionId: sessionId,
                                    sequenceId: sequenceId
                                })
                            ];
                        case 4:
                            e_2 = _a.sent();
                            this.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_2));
                            return [
                                3 /*break*/ ,
                                5
                            ];
                        case 5:
                            return [
                                2 /*return*/ ,
                                undefined
                            ];
                    }
                });
            });
        };
        _this.addEventToCurrentSequence = function(sessionId, event) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var tx, sequenceEvents, eventsToSend, updatedEvents, sequenceId, e_3;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            _a.trys.push([
                                0,
                                10,
                                ,
                                11
                            ]);
                            tx = this.db.transaction(currentSequenceKey, 'readwrite');
                            return [
                                4 /*yield*/ ,
                                tx.store.get(sessionId)
                            ];
                        case 1:
                            sequenceEvents = _a.sent();
                            if (!!sequenceEvents) return [
                                3 /*break*/ ,
                                3
                            ];
                            return [
                                4 /*yield*/ ,
                                tx.store.put({
                                    sessionId: sessionId,
                                    events: [
                                        event
                                    ]
                                })
                            ];
                        case 2:
                            _a.sent();
                            return [
                                2 /*return*/ 
                            ];
                        case 3:
                            eventsToSend = void 0;
                            if (!this.shouldSplitEventsList(sequenceEvents.events, event)) return [
                                3 /*break*/ ,
                                5
                            ];
                            eventsToSend = sequenceEvents.events;
                            // set store to empty array
                            return [
                                4 /*yield*/ ,
                                tx.store.put({
                                    sessionId: sessionId,
                                    events: [
                                        event
                                    ]
                                })
                            ];
                        case 4:
                            // set store to empty array
                            _a.sent();
                            return [
                                3 /*break*/ ,
                                7
                            ];
                        case 5:
                            updatedEvents = sequenceEvents.events.concat(event);
                            return [
                                4 /*yield*/ ,
                                tx.store.put({
                                    sessionId: sessionId,
                                    events: updatedEvents
                                })
                            ];
                        case 6:
                            _a.sent();
                            _a.label = 7;
                        case 7:
                            return [
                                4 /*yield*/ ,
                                tx.done
                            ];
                        case 8:
                            _a.sent();
                            if (!eventsToSend) {
                                return [
                                    2 /*return*/ ,
                                    undefined
                                ];
                            }
                            return [
                                4 /*yield*/ ,
                                this.storeSendingEvents(sessionId, eventsToSend)
                            ];
                        case 9:
                            sequenceId = _a.sent();
                            if (!sequenceId) {
                                return [
                                    2 /*return*/ ,
                                    undefined
                                ];
                            }
                            return [
                                2 /*return*/ ,
                                {
                                    events: eventsToSend,
                                    sessionId: sessionId,
                                    sequenceId: sequenceId
                                }
                            ];
                        case 10:
                            e_3 = _a.sent();
                            this.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_3));
                            return [
                                3 /*break*/ ,
                                11
                            ];
                        case 11:
                            return [
                                2 /*return*/ ,
                                undefined
                            ];
                    }
                });
            });
        };
        _this.storeSendingEvents = function(sessionId, events) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var sequenceId, e_4;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            _a.trys.push([
                                0,
                                2,
                                ,
                                3
                            ]);
                            return [
                                4 /*yield*/ ,
                                this.db.put(sequencesToSendKey, {
                                    sessionId: sessionId,
                                    events: events
                                })
                            ];
                        case 1:
                            sequenceId = _a.sent();
                            return [
                                2 /*return*/ ,
                                sequenceId
                            ];
                        case 2:
                            e_4 = _a.sent();
                            this.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_4));
                            return [
                                3 /*break*/ ,
                                3
                            ];
                        case 3:
                            return [
                                2 /*return*/ ,
                                undefined
                            ];
                    }
                });
            });
        };
        _this.cleanUpSessionEventsStore = function(_sessionId, sequenceId) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var e_5;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            if (!sequenceId) {
                                return [
                                    2 /*return*/ 
                                ];
                            }
                            _a.label = 1;
                        case 1:
                            _a.trys.push([
                                1,
                                3,
                                ,
                                4
                            ]);
                            return [
                                4 /*yield*/ ,
                                this.db.delete(sequencesToSendKey, sequenceId)
                            ];
                        case 2:
                            _a.sent();
                            return [
                                3 /*break*/ ,
                                4
                            ];
                        case 3:
                            e_5 = _a.sent();
                            this.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_5));
                            return [
                                3 /*break*/ ,
                                4
                            ];
                        case 4:
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        };
        _this.transitionFromKeyValStore = function(sessionId) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var keyValDb, transitionCurrentSessionSequences_1, storageKey, getAllRequest_1, transitionPromise, globalScope, e_6, e_7;
                var _this = this;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            _a.trys.push([
                                0,
                                6,
                                ,
                                7
                            ]);
                            return [
                                4 /*yield*/ ,
                                keyValDatabaseExists()
                            ];
                        case 1:
                            keyValDb = _a.sent();
                            if (!keyValDb) {
                                return [
                                    2 /*return*/ 
                                ];
                            }
                            transitionCurrentSessionSequences_1 = function(numericSessionId, sessionStore) {
                                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                                    var currentSessionSequences, promisesToBatch;
                                    var _this = this;
                                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                                        switch(_a.label){
                                            case 0:
                                                currentSessionSequences = sessionStore.sessionSequences;
                                                promisesToBatch = [];
                                                Object.keys(currentSessionSequences).forEach(function(sequenceId) {
                                                    var numericSequenceId = parseInt(sequenceId, 10);
                                                    var sequence = currentSessionSequences[numericSequenceId];
                                                    if (numericSequenceId === sessionStore.currentSequenceId) {
                                                        var eventAddPromises = sequence.events.map(function(event) {
                                                            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                                                                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                                                                    return [
                                                                        2 /*return*/ ,
                                                                        this.addEventToCurrentSequence(numericSessionId, event)
                                                                    ];
                                                                });
                                                            });
                                                        });
                                                        promisesToBatch.push.apply(promisesToBatch, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(eventAddPromises), false));
                                                    } else if (sequence.status !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$legacy$2d$idb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RecordingStatus"].SENT) {
                                                        promisesToBatch.push(_this.storeSendingEvents(numericSessionId, sequence.events));
                                                    }
                                                });
                                                return [
                                                    4 /*yield*/ ,
                                                    batchPromiseAll(promisesToBatch)
                                                ];
                                            case 1:
                                                _a.sent();
                                                return [
                                                    2 /*return*/ 
                                                ];
                                        }
                                    });
                                });
                            };
                            storageKey = "".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$types$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_PREFIX"], "_").concat(this.apiKey.substring(0, 10));
                            _a.label = 2;
                        case 2:
                            _a.trys.push([
                                2,
                                4,
                                ,
                                5
                            ]);
                            getAllRequest_1 = keyValDb.transaction('keyval').objectStore('keyval').getAll(storageKey);
                            transitionPromise = new Promise(function(resolve) {
                                getAllRequest_1.onsuccess = function(e) {
                                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                                        var storedReplaySessionContextList, storedReplaySessionContexts, promisesToBatch_1;
                                        var _this = this;
                                        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                                            switch(_a.label){
                                                case 0:
                                                    storedReplaySessionContextList = e && e.target.result;
                                                    storedReplaySessionContexts = storedReplaySessionContextList && storedReplaySessionContextList[0];
                                                    if (!storedReplaySessionContexts) return [
                                                        3 /*break*/ ,
                                                        2
                                                    ];
                                                    promisesToBatch_1 = [];
                                                    Object.keys(storedReplaySessionContexts).forEach(function(storedSessionId) {
                                                        var numericSessionId = parseInt(storedSessionId, 10);
                                                        var oldSessionStore = storedReplaySessionContexts[numericSessionId];
                                                        if (sessionId === numericSessionId) {
                                                            promisesToBatch_1.push(transitionCurrentSessionSequences_1(numericSessionId, oldSessionStore));
                                                        } else {
                                                            var oldSessionSequences_1 = oldSessionStore.sessionSequences;
                                                            Object.keys(oldSessionSequences_1).forEach(function(sequenceId) {
                                                                var numericSequenceId = parseInt(sequenceId, 10);
                                                                if (oldSessionSequences_1[numericSequenceId].status !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$legacy$2d$idb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RecordingStatus"].SENT) {
                                                                    promisesToBatch_1.push(_this.storeSendingEvents(numericSessionId, oldSessionSequences_1[numericSequenceId].events));
                                                                }
                                                            });
                                                        }
                                                    });
                                                    return [
                                                        4 /*yield*/ ,
                                                        batchPromiseAll(promisesToBatch_1)
                                                    ];
                                                case 1:
                                                    _a.sent();
                                                    _a.label = 2;
                                                case 2:
                                                    resolve();
                                                    return [
                                                        2 /*return*/ 
                                                    ];
                                            }
                                        });
                                    });
                                };
                            });
                            return [
                                4 /*yield*/ ,
                                transitionPromise
                            ];
                        case 3:
                            _a.sent();
                            globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
                            if (globalScope) {
                                globalScope.indexedDB.deleteDatabase('keyval-store');
                            }
                            return [
                                3 /*break*/ ,
                                5
                            ];
                        case 4:
                            e_6 = _a.sent();
                            this.loggerProvider.warn("Failed to transition session replay events from keyval to new store: ".concat(e_6));
                            return [
                                3 /*break*/ ,
                                5
                            ];
                        case 5:
                            return [
                                3 /*break*/ ,
                                7
                            ];
                        case 6:
                            e_7 = _a.sent();
                            this.loggerProvider.warn("Failed to access keyval store: ".concat(e_7, ". For more information, visit: https://www.docs.developers.amplitude.com/session-replay/sdks/standalone/#indexeddb-best-practices"));
                            return [
                                3 /*break*/ ,
                                7
                            ];
                        case 7:
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        };
        _this.apiKey = args.apiKey;
        _this.db = args.db;
        return _this;
    }
    SessionReplayEventsIDBStore.new = function(type, args, sessionId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var dbSuffix, dbName, db, eventsIDBStore, e_8;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        _a.trys.push([
                            0,
                            3,
                            ,
                            4
                        ]);
                        dbSuffix = type === 'replay' ? '' : "_".concat(type);
                        dbName = "".concat(args.apiKey.substring(0, 10), "_amp_session_replay_events").concat(dbSuffix);
                        return [
                            4 /*yield*/ ,
                            createStore(dbName)
                        ];
                    case 1:
                        db = _a.sent();
                        eventsIDBStore = new SessionReplayEventsIDBStore((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, args), {
                            db: db
                        }));
                        return [
                            4 /*yield*/ ,
                            eventsIDBStore.transitionFromKeyValStore(sessionId)
                        ];
                    case 2:
                        _a.sent();
                        return [
                            2 /*return*/ ,
                            eventsIDBStore
                        ];
                    case 3:
                        e_8 = _a.sent();
                        args.loggerProvider.warn("".concat(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$messages$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STORAGE_FAILURE"], ": ").concat(e_8));
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplayEventsIDBStore.prototype.getCurrentSequenceEvents = function(sessionId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var events, allEvents, _a, _b, events, e_9_1;
            var e_9, _c;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_d) {
                switch(_d.label){
                    case 0:
                        if (!sessionId) return [
                            3 /*break*/ ,
                            2
                        ];
                        return [
                            4 /*yield*/ ,
                            this.db.get('sessionCurrentSequence', sessionId)
                        ];
                    case 1:
                        events = _d.sent();
                        if (!events) {
                            return [
                                2 /*return*/ ,
                                undefined
                            ];
                        }
                        return [
                            2 /*return*/ ,
                            [
                                events
                            ]
                        ];
                    case 2:
                        allEvents = [];
                        _d.label = 3;
                    case 3:
                        _d.trys.push([
                            3,
                            8,
                            9,
                            10
                        ]);
                        return [
                            4 /*yield*/ ,
                            this.db.getAll('sessionCurrentSequence')
                        ];
                    case 4:
                        _a = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"].apply(void 0, [
                            _d.sent()
                        ]), _b = _a.next();
                        _d.label = 5;
                    case 5:
                        if (!!_b.done) return [
                            3 /*break*/ ,
                            7
                        ];
                        events = _b.value;
                        allEvents.push(events);
                        _d.label = 6;
                    case 6:
                        _b = _a.next();
                        return [
                            3 /*break*/ ,
                            5
                        ];
                    case 7:
                        return [
                            3 /*break*/ ,
                            10
                        ];
                    case 8:
                        e_9_1 = _d.sent();
                        e_9 = {
                            error: e_9_1
                        };
                        return [
                            3 /*break*/ ,
                            10
                        ];
                    case 9:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        } finally{
                            if (e_9) throw e_9.error;
                        }
                        return [
                            7 /*endfinally*/ 
                        ];
                    case 10:
                        return [
                            2 /*return*/ ,
                            allEvents
                        ];
                }
            });
        });
    };
    return SessionReplayEventsIDBStore;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$base$2d$events$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseEventsStore"]);
;
 //# sourceMappingURL=events-idb-store.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-memory-store.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "InMemoryEventsStore": (()=>InMemoryEventsStore)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$base$2d$events$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/base-events-store.js [app-client] (ecmascript)");
;
;
var InMemoryEventsStore = function(_super) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__extends"])(InMemoryEventsStore, _super);
    function InMemoryEventsStore() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.finalizedSequences = {};
        _this.sequences = {};
        _this.sequenceId = 0;
        return _this;
    }
    InMemoryEventsStore.prototype.resetCurrentSequence = function(sessionId) {
        this.sequences[sessionId] = [];
    };
    InMemoryEventsStore.prototype.addSequence = function(sessionId) {
        var sequenceId = this.sequenceId++;
        var events = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(this.sequences[sessionId]), false);
        this.finalizedSequences[sequenceId] = {
            sessionId: sessionId,
            events: events
        };
        this.resetCurrentSequence(sessionId);
        return {
            sequenceId: sequenceId,
            events: events,
            sessionId: sessionId
        };
    };
    InMemoryEventsStore.prototype.getSequencesToSend = function() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                return [
                    2 /*return*/ ,
                    Object.entries(this.finalizedSequences).map(function(_a) {
                        var _b = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(_a, 2), sequenceId = _b[0], _c = _b[1], sessionId = _c.sessionId, events = _c.events;
                        return {
                            sequenceId: Number(sequenceId),
                            sessionId: sessionId,
                            events: events
                        };
                    })
                ];
            });
        });
    };
    InMemoryEventsStore.prototype.storeCurrentSequence = function(sessionId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                if (!this.sequences[sessionId]) {
                    return [
                        2 /*return*/ ,
                        undefined
                    ];
                }
                return [
                    2 /*return*/ ,
                    this.addSequence(sessionId)
                ];
            });
        });
    };
    InMemoryEventsStore.prototype.addEventToCurrentSequence = function(sessionId, event) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var sequenceReturn;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                if (!this.sequences[sessionId]) {
                    this.resetCurrentSequence(sessionId);
                }
                if (this.shouldSplitEventsList(this.sequences[sessionId], event)) {
                    sequenceReturn = this.addSequence(sessionId);
                }
                this.sequences[sessionId].push(event);
                return [
                    2 /*return*/ ,
                    sequenceReturn
                ];
            });
        });
    };
    InMemoryEventsStore.prototype.storeSendingEvents = function(sessionId, events) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                this.finalizedSequences[this.sequenceId] = {
                    sessionId: sessionId,
                    events: events
                };
                return [
                    2 /*return*/ ,
                    this.sequenceId++
                ];
            });
        });
    };
    InMemoryEventsStore.prototype.cleanUpSessionEventsStore = function(_sessionId, sequenceId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                if (sequenceId !== undefined) {
                    delete this.finalizedSequences[sequenceId];
                }
                return [
                    2 /*return*/ 
                ];
            });
        });
    };
    return InMemoryEventsStore;
}(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$base$2d$events$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseEventsStore"]);
;
 //# sourceMappingURL=events-memory-store.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-manager.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createEventsManager": (()=>createEventsManager)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$track$2d$destination$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/track-destination.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$idb$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-idb-store.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$memory$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-memory-store.js [app-client] (ecmascript)");
;
;
;
;
;
var createEventsManager = function(_a) {
    var config = _a.config, sessionId = _a.sessionId, minInterval = _a.minInterval, maxInterval = _a.maxInterval, type = _a.type, payloadBatcher = _a.payloadBatcher, storeType = _a.storeType;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
        function flush(useRetry) {
            if (useRetry === void 0) {
                useRetry = false;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    return [
                        2 /*return*/ ,
                        trackDestination.flush(useRetry)
                    ];
                });
            });
        }
        var trackDestination, getMemoryStore, getIdbStoreOrFallback, store, _b, sendEventsList, sendCurrentSequenceEvents, sendStoredEvents, addEvent;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_c) {
            switch(_c.label){
                case 0:
                    trackDestination = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$track$2d$destination$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionReplayTrackDestination"]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, config), {
                        loggerProvider: config.loggerProvider,
                        payloadBatcher: payloadBatcher
                    }));
                    getMemoryStore = function() {
                        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$memory$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InMemoryEventsStore"]({
                            loggerProvider: config.loggerProvider,
                            maxInterval: maxInterval,
                            minInterval: minInterval
                        });
                    };
                    getIdbStoreOrFallback = function() {
                        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
                            var store;
                            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                                switch(_a.label){
                                    case 0:
                                        return [
                                            4 /*yield*/ ,
                                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$idb$2d$store$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionReplayEventsIDBStore"].new(type, {
                                                loggerProvider: config.loggerProvider,
                                                minInterval: minInterval,
                                                maxInterval: maxInterval,
                                                apiKey: config.apiKey
                                            }, sessionId)
                                        ];
                                    case 1:
                                        store = _a.sent();
                                        config.loggerProvider.log('Failed to initialize idb store, falling back to memory store.');
                                        return [
                                            2 /*return*/ ,
                                            store !== null && store !== void 0 ? store : getMemoryStore()
                                        ];
                                }
                            });
                        });
                    };
                    if (!(storeType === 'idb')) return [
                        3 /*break*/ ,
                        2
                    ];
                    return [
                        4 /*yield*/ ,
                        getIdbStoreOrFallback()
                    ];
                case 1:
                    _b = _c.sent();
                    return [
                        3 /*break*/ ,
                        3
                    ];
                case 2:
                    _b = getMemoryStore();
                    _c.label = 3;
                case 3:
                    store = _b;
                    sendEventsList = function(_a) {
                        var events = _a.events, sessionId = _a.sessionId, deviceId = _a.deviceId, sequenceId = _a.sequenceId;
                        if (config.debugMode) {
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStorageSize"])().then(function(_a) {
                                var totalStorageSize = _a.totalStorageSize, percentOfQuota = _a.percentOfQuota, usageDetails = _a.usageDetails;
                                config.loggerProvider.debug("Total storage size: ".concat(totalStorageSize, " KB, percentage of quota: ").concat(percentOfQuota, "%, usage details: ").concat(usageDetails));
                            }).catch(function() {
                            // swallow error
                            });
                        }
                        trackDestination.sendEventsList({
                            events: events,
                            sessionId: sessionId,
                            flushMaxRetries: config.flushMaxRetries,
                            apiKey: config.apiKey,
                            deviceId: deviceId,
                            sampleRate: config.sampleRate,
                            serverZone: config.serverZone,
                            version: config.version,
                            type: type,
                            onComplete: function() {
                                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
                                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                                        switch(_a.label){
                                            case 0:
                                                return [
                                                    4 /*yield*/ ,
                                                    store.cleanUpSessionEventsStore(sessionId, sequenceId)
                                                ];
                                            case 1:
                                                _a.sent();
                                                return [
                                                    2 /*return*/ 
                                                ];
                                        }
                                    });
                                });
                            }
                        });
                    };
                    sendCurrentSequenceEvents = function(_a) {
                        var sessionId = _a.sessionId, deviceId = _a.deviceId;
                        store.storeCurrentSequence(sessionId).then(function(currentSequence) {
                            if (currentSequence) {
                                sendEventsList({
                                    sequenceId: currentSequence.sequenceId,
                                    events: currentSequence.events,
                                    sessionId: currentSequence.sessionId,
                                    deviceId: deviceId
                                });
                            }
                        }).catch(function(e) {
                            config.loggerProvider.warn('Failed to get current sequence of session replay events for session:', e);
                        });
                    };
                    sendStoredEvents = function(_a) {
                        var deviceId = _a.deviceId;
                        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(void 0, void 0, void 0, function() {
                            var sequencesToSend;
                            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
                                switch(_b.label){
                                    case 0:
                                        return [
                                            4 /*yield*/ ,
                                            store.getSequencesToSend()
                                        ];
                                    case 1:
                                        sequencesToSend = _b.sent();
                                        sequencesToSend && sequencesToSend.forEach(function(sequence) {
                                            sendEventsList({
                                                sequenceId: sequence.sequenceId,
                                                events: sequence.events,
                                                sessionId: sequence.sessionId,
                                                deviceId: deviceId
                                            });
                                        });
                                        return [
                                            2 /*return*/ 
                                        ];
                                }
                            });
                        });
                    };
                    addEvent = function(_a) {
                        var event = _a.event, sessionId = _a.sessionId, deviceId = _a.deviceId;
                        store.addEventToCurrentSequence(sessionId, event.data).then(function(sequenceToSend) {
                            return sequenceToSend && sendEventsList({
                                sequenceId: sequenceToSend.sequenceId,
                                events: sequenceToSend.events,
                                sessionId: sequenceToSend.sessionId,
                                deviceId: deviceId
                            });
                        }).catch(function(e) {
                            config.loggerProvider.warn('Failed to add event to session replay capture:', e);
                        });
                    };
                    return [
                        2 /*return*/ ,
                        {
                            sendCurrentSequenceEvents: sendCurrentSequenceEvents,
                            addEvent: addEvent,
                            sendStoredEvents: sendStoredEvents,
                            flush: flush
                        }
                    ];
            }
        });
    });
}; //# sourceMappingURL=events-manager.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/multi-manager.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MultiEventManager": (()=>MultiEventManager)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
;
/**
 * "Registers" events managers internally. When an event is added this class routes the event to the correct
 * manager. For all send or flush methods this will invoke the event for all registered managers.
 */ var MultiEventManager = function() {
    function MultiEventManager() {
        var managers = [];
        for(var _i = 0; _i < arguments.length; _i++){
            managers[_i] = arguments[_i];
        }
        var managersMap = new Map();
        managers.forEach(function(t) {
            managersMap.set(t.name, t.manager);
        });
        this.managers = managersMap;
    }
    MultiEventManager.prototype.sendStoredEvents = function(opts) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var promises;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        promises = [];
                        this.managers.forEach(function(manager) {
                            promises.push(manager.sendStoredEvents(opts));
                        });
                        return [
                            4 /*yield*/ ,
                            Promise.all(promises)
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    MultiEventManager.prototype.addEvent = function(_a) {
        var _b;
        var sessionId = _a.sessionId, event = _a.event, deviceId = _a.deviceId;
        (_b = this.managers.get(event.type)) === null || _b === void 0 ? void 0 : _b.addEvent({
            sessionId: sessionId,
            event: event,
            deviceId: deviceId
        });
    };
    MultiEventManager.prototype.sendCurrentSequenceEvents = function(_a) {
        var sessionId = _a.sessionId, deviceId = _a.deviceId;
        this.managers.forEach(function(manager) {
            manager.sendCurrentSequenceEvents({
                sessionId: sessionId,
                deviceId: deviceId
            });
        });
    };
    MultiEventManager.prototype.flush = function(useRetry) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var promises;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        promises = [];
                        this.managers.forEach(function(manager) {
                            promises.push(manager.flush(useRetry));
                        });
                        return [
                            4 /*yield*/ ,
                            Promise.all(promises)
                        ];
                    case 1:
                        _a.sent();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return MultiEventManager;
}();
;
 //# sourceMappingURL=multi-manager.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/utils/rrweb.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getWindowHeight": (()=>getWindowHeight),
    "getWindowScroll": (()=>getWindowScroll),
    "getWindowWidth": (()=>getWindowWidth)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$utils$2f$dist$2f$rrweb$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/rrweb-utils/dist/rrweb-utils.js [app-client] (ecmascript)");
;
;
function getWindowScroll(win) {
    var _a, _b, _c, _d;
    var doc = win.document;
    return {
        left: doc.scrollingElement ? doc.scrollingElement.scrollLeft : win.pageXOffset !== undefined ? win.pageXOffset : doc.documentElement.scrollLeft || (doc === null || doc === void 0 ? void 0 : doc.body) && ((_a = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$utils$2f$dist$2f$rrweb$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].parentElement(doc.body)) === null || _a === void 0 ? void 0 : _a.scrollLeft) || ((_b = doc === null || doc === void 0 ? void 0 : doc.body) === null || _b === void 0 ? void 0 : _b.scrollLeft) || 0,
        top: doc.scrollingElement ? doc.scrollingElement.scrollTop : win.pageYOffset !== undefined ? win.pageYOffset : (doc === null || doc === void 0 ? void 0 : doc.documentElement.scrollTop) || (doc === null || doc === void 0 ? void 0 : doc.body) && ((_c = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$utils$2f$dist$2f$rrweb$2d$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].parentElement(doc.body)) === null || _c === void 0 ? void 0 : _c.scrollTop) || ((_d = doc === null || doc === void 0 ? void 0 : doc.body) === null || _d === void 0 ? void 0 : _d.scrollTop) || 0
    };
}
function getWindowHeight() {
    var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
    return (globalScope === null || globalScope === void 0 ? void 0 : globalScope.innerHeight) || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
}
function getWindowWidth() {
    var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
    return (globalScope === null || globalScope === void 0 ? void 0 : globalScope.innerWidth) || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
} //# sourceMappingURL=rrweb.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/libs/finder.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/* istanbul ignore file */ __turbopack_context__.s({
    "finder": (()=>finder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
;
var config;
var rootDocument;
var start;
function finder(input, options) {
    start = new Date();
    if (input.nodeType !== Node.ELEMENT_NODE) {
        throw new Error("Can't generate CSS selector for non-element node type.");
    }
    if ('html' === input.tagName.toLowerCase()) {
        return 'html';
    }
    var defaults = {
        root: document.body,
        idName: function(_name) {
            return true;
        },
        className: function(_name) {
            return true;
        },
        tagName: function(_name) {
            return true;
        },
        attr: function(_name, _value) {
            return false;
        },
        seedMinLength: 1,
        optimizedMinLength: 2,
        threshold: 1000,
        maxNumberOfTries: 10000,
        timeoutMs: undefined
    };
    config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, defaults), options);
    rootDocument = findRootDocument(config.root, defaults);
    var path = bottomUpSearch(input, 'all', function() {
        return bottomUpSearch(input, 'two', function() {
            return bottomUpSearch(input, 'one', function() {
                return bottomUpSearch(input, 'none');
            });
        });
    });
    if (path) {
        var optimized = sort(optimize(path, input));
        if (optimized.length > 0) {
            path = optimized[0];
        }
        return selector(path);
    } else {
        throw new Error("Selector was not found.");
    }
}
function findRootDocument(rootNode, defaults) {
    if (rootNode.nodeType === Node.DOCUMENT_NODE) {
        return rootNode;
    }
    if (rootNode === defaults.root) {
        return rootNode.ownerDocument;
    }
    return rootNode;
}
function bottomUpSearch(input, limit, fallback) {
    var path = null;
    var stack = [];
    var current = input;
    var i = 0;
    var _loop_1 = function() {
        var e_1, _a;
        var elapsedTime = new Date().getTime() - start.getTime();
        if (config.timeoutMs !== undefined && elapsedTime > config.timeoutMs) {
            throw new Error("Timeout: Can't find a unique selector after ".concat(elapsedTime, "ms"));
        }
        var level = maybe(id(current)) || maybe.apply(void 0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(attr(current)), false)) || maybe.apply(void 0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(classNames(current)), false)) || maybe(tagName(current)) || [
            any()
        ];
        var nth = index(current);
        if (limit == 'all') {
            if (nth) {
                level = level.concat(level.filter(dispensableNth).map(function(node) {
                    return nthChild(node, nth);
                }));
            }
        } else if (limit == 'two') {
            level = level.slice(0, 1);
            if (nth) {
                level = level.concat(level.filter(dispensableNth).map(function(node) {
                    return nthChild(node, nth);
                }));
            }
        } else if (limit == 'one') {
            var _b = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(level = level.slice(0, 1), 1), node = _b[0];
            if (nth && dispensableNth(node)) {
                level = [
                    nthChild(node, nth)
                ];
            }
        } else if (limit == 'none') {
            level = [
                any()
            ];
            if (nth) {
                level = [
                    nthChild(level[0], nth)
                ];
            }
        }
        try {
            for(var level_1 = (e_1 = void 0, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(level)), level_1_1 = level_1.next(); !level_1_1.done; level_1_1 = level_1.next()){
                var node = level_1_1.value;
                node.level = i;
            }
        } catch (e_1_1) {
            e_1 = {
                error: e_1_1
            };
        } finally{
            try {
                if (level_1_1 && !level_1_1.done && (_a = level_1.return)) _a.call(level_1);
            } finally{
                if (e_1) throw e_1.error;
            }
        }
        stack.push(level);
        if (stack.length >= config.seedMinLength) {
            path = findUniquePath(stack, fallback);
            if (path) {
                return "break";
            }
        }
        current = current.parentElement;
        i++;
    };
    while(current){
        var state_1 = _loop_1();
        if (state_1 === "break") break;
    }
    if (!path) {
        path = findUniquePath(stack, fallback);
    }
    if (!path && fallback) {
        return fallback();
    }
    return path;
}
function findUniquePath(stack, fallback) {
    var e_2, _a;
    var paths = sort(combinations(stack));
    if (paths.length > config.threshold) {
        return fallback ? fallback() : null;
    }
    try {
        for(var paths_1 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()){
            var candidate = paths_1_1.value;
            if (unique(candidate)) {
                return candidate;
            }
        }
    } catch (e_2_1) {
        e_2 = {
            error: e_2_1
        };
    } finally{
        try {
            if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);
        } finally{
            if (e_2) throw e_2.error;
        }
    }
    return null;
}
function selector(path) {
    var node = path[0];
    var query = node.name;
    for(var i = 1; i < path.length; i++){
        var level = path[i].level || 0;
        if (node.level === level - 1) {
            query = "".concat(path[i].name, " > ").concat(query);
        } else {
            query = "".concat(path[i].name, " ").concat(query);
        }
        node = path[i];
    }
    return query;
}
function penalty(path) {
    return path.map(function(node) {
        return node.penalty;
    }).reduce(function(acc, i) {
        return acc + i;
    }, 0);
}
function unique(path) {
    var css = selector(path);
    switch(rootDocument.querySelectorAll(css).length){
        case 0:
            throw new Error("Can't select any node with this selector: ".concat(css));
        case 1:
            return true;
        default:
            return false;
    }
}
function id(input) {
    var elementId = input.getAttribute('id');
    if (elementId && config.idName(elementId)) {
        return {
            name: '#' + CSS.escape(elementId),
            penalty: 0
        };
    }
    return null;
}
function attr(input) {
    var attrs = Array.from(input.attributes).filter(function(attr) {
        return config.attr(attr.name, attr.value);
    });
    return attrs.map(function(attr) {
        return {
            name: "[".concat(CSS.escape(attr.name), "=\"").concat(CSS.escape(attr.value), "\"]"),
            penalty: 0.5
        };
    });
}
function classNames(input) {
    var names = Array.from(input.classList).filter(config.className);
    return names.map(function(name) {
        return {
            name: '.' + CSS.escape(name),
            penalty: 1
        };
    });
}
function tagName(input) {
    var name = input.tagName.toLowerCase();
    if (config.tagName(name)) {
        return {
            name: name,
            penalty: 2
        };
    }
    return null;
}
function any() {
    return {
        name: '*',
        penalty: 3
    };
}
function index(input) {
    var parent = input.parentNode;
    if (!parent) {
        return null;
    }
    var child = parent.firstChild;
    if (!child) {
        return null;
    }
    var i = 0;
    while(child){
        if (child.nodeType === Node.ELEMENT_NODE) {
            i++;
        }
        if (child === input) {
            break;
        }
        child = child.nextSibling;
    }
    return i;
}
function nthChild(node, i) {
    return {
        name: node.name + ":nth-child(".concat(i, ")"),
        penalty: node.penalty + 1
    };
}
function dispensableNth(node) {
    return node.name !== 'html' && !node.name.startsWith('#');
}
function maybe() {
    var level = [];
    for(var _i = 0; _i < arguments.length; _i++){
        level[_i] = arguments[_i];
    }
    var list = level.filter(notEmpty);
    if (list.length > 0) {
        return list;
    }
    return null;
}
function notEmpty(value) {
    return value !== null && value !== undefined;
}
function combinations(stack, path) {
    var _a, _b, node, e_3_1;
    var e_3, _c;
    if (path === void 0) {
        path = [];
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_d) {
        switch(_d.label){
            case 0:
                if (!(stack.length > 0)) return [
                    3 /*break*/ ,
                    9
                ];
                _d.label = 1;
            case 1:
                _d.trys.push([
                    1,
                    6,
                    7,
                    8
                ]);
                _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(stack[0]), _b = _a.next();
                _d.label = 2;
            case 2:
                if (!!_b.done) return [
                    3 /*break*/ ,
                    5
                ];
                node = _b.value;
                return [
                    5 /*yield**/ ,
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(combinations(stack.slice(1, stack.length), path.concat(node)))
                ];
            case 3:
                _d.sent();
                _d.label = 4;
            case 4:
                _b = _a.next();
                return [
                    3 /*break*/ ,
                    2
                ];
            case 5:
                return [
                    3 /*break*/ ,
                    8
                ];
            case 6:
                e_3_1 = _d.sent();
                e_3 = {
                    error: e_3_1
                };
                return [
                    3 /*break*/ ,
                    8
                ];
            case 7:
                try {
                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                } finally{
                    if (e_3) throw e_3.error;
                }
                return [
                    7 /*endfinally*/ 
                ];
            case 8:
                return [
                    3 /*break*/ ,
                    11
                ];
            case 9:
                return [
                    4 /*yield*/ ,
                    path
                ];
            case 10:
                _d.sent();
                _d.label = 11;
            case 11:
                return [
                    2 /*return*/ 
                ];
        }
    });
}
function sort(paths) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(paths), false).sort(function(a, b) {
        return penalty(a) - penalty(b);
    });
}
function optimize(path, input, scope) {
    var i, newPath, newPathKey;
    if (scope === void 0) {
        scope = {
            counter: 0,
            visited: new Map()
        };
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
        switch(_a.label){
            case 0:
                if (!(path.length > 2 && path.length > config.optimizedMinLength)) return [
                    3 /*break*/ ,
                    5
                ];
                i = 1;
                _a.label = 1;
            case 1:
                if (!(i < path.length - 1)) return [
                    3 /*break*/ ,
                    5
                ];
                if (scope.counter > config.maxNumberOfTries) {
                    return [
                        2 /*return*/ 
                    ]; // Okay At least I tried!
                }
                scope.counter += 1;
                newPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(path), false);
                newPath.splice(i, 1);
                newPathKey = selector(newPath);
                if (scope.visited.has(newPathKey)) {
                    return [
                        2 /*return*/ 
                    ];
                }
                if (!(unique(newPath) && same(newPath, input))) return [
                    3 /*break*/ ,
                    4
                ];
                return [
                    4 /*yield*/ ,
                    newPath
                ];
            case 2:
                _a.sent();
                scope.visited.set(newPathKey, true);
                return [
                    5 /*yield**/ ,
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__values"])(optimize(newPath, input, scope))
                ];
            case 3:
                _a.sent();
                _a.label = 4;
            case 4:
                i++;
                return [
                    3 /*break*/ ,
                    1
                ];
            case 5:
                return [
                    2 /*return*/ 
                ];
        }
    });
}
function same(path, input) {
    return rootDocument.querySelector(selector(path)) === input;
} //# sourceMappingURL=finder.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/hooks/click.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clickBatcher": (()=>clickBatcher),
    "clickHook": (()=>clickHook),
    "clickNonBatcher": (()=>clickNonBatcher)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$types$2f$dist$2f$rrweb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/rrweb-types/dist/rrweb-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/utils/rrweb.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$libs$2f$finder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/libs/finder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
;
;
;
;
;
;
var HOUR_IN_MILLISECONDS = 3600000;
var clickNonBatcher = function(_a) {
    var version = _a.version, events = _a.events;
    var clickEvents = [];
    events.forEach(function(evt) {
        var record = JSON.parse(evt);
        record.count = 1;
        if (record.type === 'click') {
            clickEvents.push(record);
        }
    });
    return {
        version: version,
        events: clickEvents
    };
};
var clickBatcher = function(_a) {
    var version = _a.version, events = _a.events;
    var clickEvents = [];
    events.forEach(function(evt) {
        var record = JSON.parse(evt);
        if (record.type === 'click') {
            clickEvents.push(record);
        }
    });
    var reduced = clickEvents.reduce(function(prev, curr) {
        var x = curr.x, y = curr.y, selector = curr.selector, timestamp = curr.timestamp;
        // round down to nearest hour.
        var hour = timestamp - timestamp % HOUR_IN_MILLISECONDS;
        var k = "".concat(x, ":").concat(y, ":").concat(selector !== null && selector !== void 0 ? selector : '', ":").concat(hour);
        if (!prev[k]) {
            prev[k] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, curr), {
                timestamp: hour,
                count: 1
            });
        } else {
            prev[k].count += 1;
        }
        return prev;
    }, {});
    return {
        version: version,
        events: Object.values(reduced)
    };
};
var clickHook = function(logger, _a) {
    var eventsManager = _a.eventsManager, sessionId = _a.sessionId, deviceIdFn = _a.deviceIdFn, mirror = _a.mirror, ugcFilterRules = _a.ugcFilterRules;
    return function(e) {
        if (e.type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$types$2f$dist$2f$rrweb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MouseInteractions"].Click) {
            return;
        }
        var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
        if (!globalScope) {
            return;
        }
        var location = globalScope.location, innerHeight = globalScope.innerHeight, innerWidth = globalScope.innerWidth;
        // it only makes sense to send events if a pageUrl exists
        if (!location) {
            return;
        }
        var x = e.x, y = e.y;
        if (x === undefined || y === undefined) {
            return;
        }
        var node = mirror.getNode(e.id);
        var selector;
        if (node) {
            try {
                selector = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$libs$2f$finder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["finder"])(node);
            } catch (err) {
                logger.debug('error resolving selector from finder');
            }
        }
        var _a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowScroll"])(globalScope), scrollX = _a.left, scrollY = _a.top;
        var pageUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPageUrl"])(location.href, ugcFilterRules);
        var event = {
            x: x + scrollX,
            y: y + scrollY,
            selector: selector,
            viewportHeight: innerHeight,
            viewportWidth: innerWidth,
            pageUrl: pageUrl,
            timestamp: Date.now(),
            type: 'click'
        };
        var deviceId = deviceIdFn();
        if (deviceId) {
            eventsManager.addEvent({
                sessionId: sessionId,
                event: {
                    type: 'interaction',
                    data: JSON.stringify(event)
                },
                deviceId: deviceId
            });
        }
    };
}; //# sourceMappingURL=click.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/beacon-transport.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BeaconTransport": (()=>BeaconTransport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
;
;
/**
 * For very small payloads it's preferable to use the [Beacon API](https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API).
 * While it doesn't provide 100% guarantees on sends, it greatly helps with overall reliability and page load performance. As
 * the Beacon API has a potential to fail due to size constraints we want to fall back to XHR if need be. This is mostly to
 * be used with 'pagehide' or 'beforeunload' events.
 *
 * Note there are only 3 CORS safelisted Content-Types you can send:
 *
 * - application/x-www-form-urlencoded
 * - multipart/form-data
 * - text/plain
 *
 * If we do not send one of these, some browsers like Chrome may not send this at all. Also we incur the overhead of a preflight
 * request. In our case we will add no additional content-type header. If you are trying to ping a server that requires this
 * header, you may want to use the regular fetch API or a different mechanism.
 */ var BeaconTransport = function() {
    function BeaconTransport(context, config) {
        var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
        if (globalScope && globalScope.navigator && typeof globalScope.navigator.sendBeacon === 'function') {
            this.sendBeacon = function(pageUrl, payload) {
                try {
                    if (globalScope.navigator.sendBeacon(pageUrl, JSON.stringify(payload))) {
                        return true;
                    }
                } catch (e) {
                // not logging error, since it would be hard to view and just adds overhead.
                }
                return false;
            };
        } else {
            this.sendBeacon = function() {
                return false;
            };
        }
        this.sendXhr = function(pageUrl, payload) {
            var xhr = new XMLHttpRequest();
            xhr.open('POST', pageUrl, true);
            xhr.setRequestHeader('Accept', '*/*');
            xhr.send(JSON.stringify(payload));
            return true;
        };
        this.basePageUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getServerUrl"])(config.serverZone, config.trackServerUrl);
        this.apiKey = config.apiKey;
        this.context = context;
    }
    BeaconTransport.prototype.send = function(deviceId, payload) {
        var _a = this.context, sessionId = _a.sessionId, type = _a.type;
        var urlParams = new URLSearchParams({
            device_id: deviceId,
            session_id: String(sessionId),
            type: String(type),
            api_key: this.apiKey
        });
        var pageUrl = "".concat(this.basePageUrl, "?").concat(urlParams.toString());
        // ideally send using the beacon API, but there is a chance it may fail, possibly due to a payload
        // size limit. in this case, try best effort to send using xhr.
        this.sendBeacon(pageUrl, payload) || this.sendXhr(pageUrl, payload);
    };
    return BeaconTransport;
}();
;
 //# sourceMappingURL=beacon-transport.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/hooks/scroll.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ScrollWatcher": (()=>ScrollWatcher)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/utils/rrweb.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$beacon$2d$transport$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/beacon-transport.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
;
;
;
;
/**
 * This is intended to watch and update max scroll activity when loaded for a particular page.
 * A new instance should be created if the page URL changes, since by default it does not reset
 * it's max scroll state. It is intended to send very few and very small events utilizing the
 * Beacon API.
 * @see {@link BeaconTransport} for more details on Beacon API usage.
 */ var ScrollWatcher = function() {
    function ScrollWatcher(transport, config) {
        var _this = this;
        this.timestamp = Date.now();
        this.hook = function(e) {
            _this.update(e);
        };
        this.send = function(deviceIdFn) {
            return function(_) {
                var _a, _b;
                var deviceId = deviceIdFn();
                var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
                if (globalScope && deviceId) {
                    _this.transport.send(deviceId, {
                        version: 1,
                        events: [
                            {
                                maxScrollX: _this._maxScrollX,
                                maxScrollY: _this._maxScrollY,
                                maxScrollWidth: _this._maxScrollWidth,
                                maxScrollHeight: _this._maxScrollHeight,
                                viewportHeight: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowHeight"])(),
                                viewportWidth: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowWidth"])(),
                                pageUrl: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPageUrl"])(globalScope.location.href, (_b = (_a = _this.config.interactionConfig) === null || _a === void 0 ? void 0 : _a.ugcFilterRules) !== null && _b !== void 0 ? _b : []),
                                timestamp: _this.timestamp,
                                type: 'scroll'
                            }
                        ]
                    });
                }
            };
        };
        this._maxScrollX = 0;
        this._maxScrollY = 0;
        this._maxScrollWidth = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowWidth"])();
        this._maxScrollHeight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowHeight"])();
        this.config = config;
        this.transport = transport;
    }
    ScrollWatcher.default = function(context, config) {
        return new ScrollWatcher(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$beacon$2d$transport$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BeaconTransport"](context, config), config);
    };
    Object.defineProperty(ScrollWatcher.prototype, "maxScrollX", {
        get: function() {
            return this._maxScrollX;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollWatcher.prototype, "maxScrollY", {
        get: function() {
            return this._maxScrollY;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollWatcher.prototype, "maxScrollWidth", {
        get: function() {
            return this._maxScrollWidth;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ScrollWatcher.prototype, "maxScrollHeight", {
        get: function() {
            return this._maxScrollHeight;
        },
        enumerable: false,
        configurable: true
    });
    ScrollWatcher.prototype.update = function(e) {
        var now = Date.now();
        if (e.x > this._maxScrollX) {
            var width = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowWidth"])();
            this._maxScrollX = e.x;
            var maxScrollWidth = e.x + width;
            if (maxScrollWidth > this._maxScrollWidth) {
                this._maxScrollWidth = maxScrollWidth;
            }
            this.timestamp = now;
        }
        if (e.y > this._maxScrollY) {
            var height = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$utils$2f$rrweb$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowHeight"])();
            this._maxScrollY = e.y;
            var maxScrollHeight = e.y + height;
            if (maxScrollHeight > this._maxScrollHeight) {
                this._maxScrollHeight = maxScrollHeight;
            }
            this.timestamp = now;
        }
    };
    return ScrollWatcher;
}();
;
 //# sourceMappingURL=scroll.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/identifiers.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionIdentifiers": (()=>SessionIdentifiers)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
;
var SessionIdentifiers = function() {
    function SessionIdentifiers(_a) {
        var sessionId = _a.sessionId, deviceId = _a.deviceId;
        this.deviceId = deviceId;
        this.sessionId = sessionId;
        if (sessionId && deviceId) {
            this.sessionReplayId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateSessionReplayId"])(sessionId, deviceId);
        }
    }
    return SessionIdentifiers;
}();
;
 //# sourceMappingURL=identifiers.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/event-compressor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EventCompressor": (()=>EventCompressor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$packer$2f$dist$2f$packer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/rrweb-packer/dist/packer.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$packer$2f$dist$2f$pack$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/rrweb-packer/dist/pack.js [app-client] (ecmascript)");
;
;
var DEFAULT_TIMEOUT = 2000;
var EventCompressor = function() {
    function EventCompressor(eventsManager, config, deviceId, workerScriptInternal) {
        var _this = this;
        var _a, _b, _c;
        this.taskQueue = [];
        this.isProcessing = false;
        this.compressEvent = function(event) {
            var packedEvent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$packer$2f$dist$2f$pack$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pack"])(event);
            return JSON.stringify(packedEvent);
        };
        this.addCompressedEventToManager = function(compressedEvent, sessionId) {
            if (_this.eventsManager && _this.deviceId) {
                _this.eventsManager.addEvent({
                    event: {
                        type: 'replay',
                        data: compressedEvent
                    },
                    sessionId: sessionId,
                    deviceId: _this.deviceId
                });
            }
        };
        this.addCompressedEvent = function(event, sessionId) {
            if (_this.worker) {
                // This indirectly compresses the event.
                _this.worker.postMessage({
                    event: event,
                    sessionId: sessionId
                });
            } else {
                var compressedEvent = _this.compressEvent(event);
                _this.addCompressedEventToManager(compressedEvent, sessionId);
            }
        };
        this.terminate = function() {
            var _a;
            (_a = _this.worker) === null || _a === void 0 ? void 0 : _a.terminate();
        };
        var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
        this.canUseIdleCallback = globalScope && 'requestIdleCallback' in globalScope;
        this.eventsManager = eventsManager;
        this.config = config;
        this.deviceId = deviceId;
        this.timeout = ((_a = config.performanceConfig) === null || _a === void 0 ? void 0 : _a.timeout) || DEFAULT_TIMEOUT;
        // These two lines will be changed at compile time.
        var replace = {};
        // This next line is going to be ridiculously hard to cover in unit tests, ignoring.
        /* istanbul ignore next */ var workerScript = (_b = replace.COMPRESSION_WEBWORKER_BODY) !== null && _b !== void 0 ? _b : workerScriptInternal;
        if (((_c = this.config.experimental) === null || _c === void 0 ? void 0 : _c.useWebWorker) && globalScope && globalScope.Worker && workerScript) {
            config.loggerProvider.log('[Experimental] Enabling web worker for compression');
            var worker = new Worker(URL.createObjectURL(new Blob([
                workerScript
            ], {
                type: 'application/javascript'
            })));
            worker.onerror = function(e) {
                config.loggerProvider.error(e);
            };
            worker.onmessage = function(e) {
                var _a = e.data, compressedEvent = _a.compressedEvent, sessionId = _a.sessionId;
                _this.addCompressedEventToManager(compressedEvent, sessionId);
            };
            this.worker = worker;
        }
    }
    // Schedule processing during idle time
    EventCompressor.prototype.scheduleIdleProcessing = function() {
        var _this = this;
        if (!this.isProcessing) {
            this.isProcessing = true;
            requestIdleCallback(function(idleDeadline) {
                _this.processQueue(idleDeadline);
            }, {
                timeout: this.timeout
            });
        }
    };
    // Add an event to the task queue if idle callback is supported or compress the event directly
    EventCompressor.prototype.enqueueEvent = function(event, sessionId) {
        var _a;
        if (this.canUseIdleCallback && ((_a = this.config.performanceConfig) === null || _a === void 0 ? void 0 : _a.enabled)) {
            this.config.loggerProvider.debug('Enqueuing event for processing during idle time.');
            this.taskQueue.push({
                event: event,
                sessionId: sessionId
            });
            this.scheduleIdleProcessing();
        } else {
            this.config.loggerProvider.debug('Processing event without idle callback.');
            this.addCompressedEvent(event, sessionId);
        }
    };
    // Process the task queue during idle time
    EventCompressor.prototype.processQueue = function(idleDeadline) {
        var _this = this;
        // Process tasks while there's idle time or until the max number of tasks is reached
        while(this.taskQueue.length > 0 && (idleDeadline.timeRemaining() > 0 || idleDeadline.didTimeout)){
            var task = this.taskQueue.shift();
            if (task) {
                var event_1 = task.event, sessionId = task.sessionId;
                this.addCompressedEvent(event_1, sessionId);
            }
        }
        // If there are still tasks in the queue, schedule the next idle callback
        if (this.taskQueue.length > 0) {
            requestIdleCallback(function(idleDeadline) {
                _this.processQueue(idleDeadline);
            }, {
                timeout: this.timeout
            });
        } else {
            this.isProcessing = false;
        }
    };
    return EventCompressor;
}();
;
 //# sourceMappingURL=event-compressor.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/session-replay.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SessionReplay": (()=>SessionReplay)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tslib/tslib.es6.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$return$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/utils/return-wrapper.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$analytics$2d$connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/analytics-connector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/global-scope.js [app-client] (ecmascript)");
// Import only specific types to avoid pulling in the entire rrweb-types package
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$types$2f$dist$2f$rrweb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/rrweb-types/dist/rrweb-types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$joined$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/joined-config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/events-manager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$multi$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/multi-manager.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/helpers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$click$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/hooks/click.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$scroll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/hooks/scroll.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$identifiers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/identifiers.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/version.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$event$2d$compressor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/events/event-compressor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/logger.js [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
var SessionReplay = function() {
    function SessionReplay() {
        var _this = this;
        this.name = '@amplitude/session-replay-browser';
        this.recordCancelCallback = null;
        this.eventCount = 0;
        // Visible for testing only
        this.pageLeaveFns = [];
        // Cache the dynamically imported record function
        this.recordFunction = null;
        this.teardownEventListeners = function(teardown) {
            var globalScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])();
            if (globalScope) {
                globalScope.removeEventListener('blur', _this.blurListener);
                globalScope.removeEventListener('focus', _this.focusListener);
                !teardown && globalScope.addEventListener('blur', _this.blurListener);
                !teardown && globalScope.addEventListener('focus', _this.focusListener);
                // prefer pagehide to unload events, this is the standard going forward. it is not
                // 100% reliable, but is bfcache-compatible.
                if (globalScope.self && 'onpagehide' in globalScope.self) {
                    globalScope.removeEventListener('pagehide', _this.pageLeaveListener);
                    !teardown && globalScope.addEventListener('pagehide', _this.pageLeaveListener);
                } else {
                    // this has performance implications, but is the only way we can reliably send events
                    // in browser that don't support pagehide.
                    globalScope.removeEventListener('beforeunload', _this.pageLeaveListener);
                    !teardown && globalScope.addEventListener('beforeunload', _this.pageLeaveListener);
                }
            }
        };
        this.blurListener = function() {
            _this.sendEvents();
        };
        this.focusListener = function() {
            // Restart recording on focus to ensure that when user
            // switches tabs, we take a full snapshot
            void _this.recordEvents(false);
        };
        /**
         * This is an instance member so that if init is called multiple times
         * it doesn't add another listener to the page leave event. This is to
         * prevent duplicate listener actions from firing.
         */ this.pageLeaveListener = function(e) {
            _this.pageLeaveFns.forEach(function(fn) {
                fn(e);
            });
        };
        this.addCustomRRWebEvent = function(eventName, eventData, addStorageInfo) {
            if (eventData === void 0) {
                eventData = {};
            }
            if (addStorageInfo === void 0) {
                addStorageInfo = true;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(_this, void 0, void 0, function() {
                var debugInfo, config, storageSizeData, e_1;
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            _a.trys.push([
                                0,
                                3,
                                ,
                                4
                            ]);
                            debugInfo = undefined;
                            config = this.config;
                            if (!(config && eventName !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomRRwebEvent"].METADATA)) return [
                                3 /*break*/ ,
                                2
                            ];
                            debugInfo = {
                                config: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDebugConfig"])(config),
                                version: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VERSION"]
                            };
                            if (!addStorageInfo) return [
                                3 /*break*/ ,
                                2
                            ];
                            return [
                                4 /*yield*/ ,
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStorageSize"])()
                            ];
                        case 1:
                            storageSizeData = _a.sent();
                            debugInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, storageSizeData), debugInfo);
                            _a.label = 2;
                        case 2:
                            // Check first to ensure we are recording
                            if (this.recordCancelCallback && this.recordFunction) {
                                this.recordFunction.addCustomEvent(eventName, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__assign"])({}, eventData), debugInfo));
                            } else {
                                this.loggerProvider.debug("Not able to add custom replay capture event ".concat(eventName, " due to no ongoing recording."));
                            }
                            return [
                                3 /*break*/ ,
                                4
                            ];
                        case 3:
                            e_1 = _a.sent();
                            this.loggerProvider.debug('Error while adding custom replay capture event: ', e_1);
                            return [
                                3 /*break*/ ,
                                4
                            ];
                        case 4:
                            return [
                                2 /*return*/ 
                            ];
                    }
                });
            });
        };
        this.stopRecordingEvents = function() {
            var _a;
            try {
                _this.loggerProvider.log('Session Replay capture stopping.');
                _this.recordCancelCallback && _this.recordCancelCallback();
                _this.recordCancelCallback = null;
                (_a = _this.networkObservers) === null || _a === void 0 ? void 0 : _a.stop();
            } catch (error) {
                var typedError = error;
                _this.loggerProvider.warn("Error occurred while stopping replay capture: ".concat(typedError.toString()));
            }
        };
        this.loggerProvider = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SafeLoggerProvider"](new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"]());
    }
    SessionReplay.prototype.init = function(apiKey, options) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$return$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["returnWrapper"])(this._init(apiKey, options));
    };
    SessionReplay.prototype._init = function(apiKey, options) {
        var _a, _b, _c, _d, _e, _f;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var _g, _h, joinedConfig, localConfig, remoteConfig, scrollWatcher, managers, storeType, rrwebEventManager, error_1, typedError, payloadBatcher, interactionEventManager, error_2, typedError;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_j) {
                switch(_j.label){
                    case 0:
                        this.loggerProvider = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SafeLoggerProvider"](options.loggerProvider || new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"]());
                        Object.prototype.hasOwnProperty.call(options, 'logLevel') && this.loggerProvider.enable(options.logLevel);
                        this.identifiers = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$identifiers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionIdentifiers"]({
                            sessionId: options.sessionId,
                            deviceId: options.deviceId
                        });
                        _g = this;
                        return [
                            4 /*yield*/ ,
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$joined$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createSessionReplayJoinedConfigGenerator"])(apiKey, options)
                        ];
                    case 1:
                        _g.joinedConfigGenerator = _j.sent();
                        return [
                            4 /*yield*/ ,
                            this.joinedConfigGenerator.generateJoinedConfig(this.identifiers.sessionId)
                        ];
                    case 2:
                        _h = _j.sent(), joinedConfig = _h.joinedConfig, localConfig = _h.localConfig, remoteConfig = _h.remoteConfig;
                        this.config = joinedConfig;
                        this.setMetadata(options.sessionId, joinedConfig, localConfig, remoteConfig, (_a = options.version) === null || _a === void 0 ? void 0 : _a.version, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["VERSION"], (_b = options.version) === null || _b === void 0 ? void 0 : _b.type);
                        if (options.sessionId && ((_c = this.config.interactionConfig) === null || _c === void 0 ? void 0 : _c.enabled)) {
                            scrollWatcher = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$scroll$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ScrollWatcher"].default({
                                sessionId: options.sessionId,
                                type: 'interaction'
                            }, this.config);
                            this.pageLeaveFns = [
                                scrollWatcher.send(this.getDeviceId.bind(this)).bind(scrollWatcher)
                            ];
                            this.scrollHook = scrollWatcher.hook.bind(scrollWatcher);
                        }
                        managers = [];
                        storeType = this.config.storeType;
                        if (storeType === 'idb' && !((_d = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$global$2d$scope$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalScope"])()) === null || _d === void 0 ? void 0 : _d.indexedDB)) {
                            storeType = 'memory';
                            this.loggerProvider.warn('Could not use preferred indexedDB storage, reverting to in memory option.');
                        }
                        this.loggerProvider.log("Using ".concat(storeType, " for event storage."));
                        _j.label = 3;
                    case 3:
                        _j.trys.push([
                            3,
                            5,
                            ,
                            6
                        ]);
                        return [
                            4 /*yield*/ ,
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createEventsManager"])({
                                config: this.config,
                                sessionId: this.identifiers.sessionId,
                                type: 'replay',
                                storeType: storeType
                            })
                        ];
                    case 4:
                        rrwebEventManager = _j.sent();
                        managers.push({
                            name: 'replay',
                            manager: rrwebEventManager
                        });
                        return [
                            3 /*break*/ ,
                            6
                        ];
                    case 5:
                        error_1 = _j.sent();
                        typedError = error_1;
                        this.loggerProvider.warn("Error occurred while creating replay events manager: ".concat(typedError.toString()));
                        return [
                            3 /*break*/ ,
                            6
                        ];
                    case 6:
                        if (!((_e = this.config.interactionConfig) === null || _e === void 0 ? void 0 : _e.enabled)) return [
                            3 /*break*/ ,
                            10
                        ];
                        payloadBatcher = this.config.interactionConfig.batch ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$click$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clickBatcher"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$click$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clickNonBatcher"];
                        _j.label = 7;
                    case 7:
                        _j.trys.push([
                            7,
                            9,
                            ,
                            10
                        ]);
                        return [
                            4 /*yield*/ ,
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$events$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createEventsManager"])({
                                config: this.config,
                                sessionId: this.identifiers.sessionId,
                                type: 'interaction',
                                minInterval: (_f = this.config.interactionConfig.trackEveryNms) !== null && _f !== void 0 ? _f : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["INTERACTION_MIN_INTERVAL"],
                                maxInterval: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["INTERACTION_MAX_INTERVAL"],
                                payloadBatcher: payloadBatcher,
                                storeType: storeType
                            })
                        ];
                    case 8:
                        interactionEventManager = _j.sent();
                        managers.push({
                            name: 'interaction',
                            manager: interactionEventManager
                        });
                        return [
                            3 /*break*/ ,
                            10
                        ];
                    case 9:
                        error_2 = _j.sent();
                        typedError = error_2;
                        this.loggerProvider.warn("Error occurred while creating interaction events manager: ".concat(typedError.toString()));
                        return [
                            3 /*break*/ ,
                            10
                        ];
                    case 10:
                        this.eventsManager = new (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$multi$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiEventManager"].bind.apply(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$multi$2d$manager$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiEventManager"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__spreadArray"])([
                            void 0
                        ], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__read"])(managers), false)))();
                        // To prevent too many threads.
                        if (this.eventCompressor) {
                            this.eventCompressor.terminate();
                        }
                        this.eventCompressor = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$events$2f$event$2d$compressor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventCompressor"](this.eventsManager, this.config, this.getDeviceId());
                        return [
                            4 /*yield*/ ,
                            this.initializeNetworkObservers()
                        ];
                    case 11:
                        _j.sent();
                        this.loggerProvider.log('Installing @amplitude/session-replay-browser.');
                        this.teardownEventListeners(false);
                        void this.initialize(true);
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplay.prototype.setSessionId = function(sessionId, deviceId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$return$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["returnWrapper"])(this.asyncSetSessionId(sessionId, deviceId));
    };
    SessionReplay.prototype.asyncSetSessionId = function(sessionId, deviceId) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var previousSessionId, deviceIdForReplayId, joinedConfig;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        previousSessionId = this.identifiers && this.identifiers.sessionId;
                        if (previousSessionId) {
                            this.sendEvents(previousSessionId);
                        }
                        deviceIdForReplayId = deviceId || this.getDeviceId();
                        this.identifiers = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$identifiers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionIdentifiers"]({
                            sessionId: sessionId,
                            deviceId: deviceIdForReplayId
                        });
                        if (!(this.joinedConfigGenerator && previousSessionId)) return [
                            3 /*break*/ ,
                            2
                        ];
                        return [
                            4 /*yield*/ ,
                            this.joinedConfigGenerator.generateJoinedConfig(this.identifiers.sessionId)
                        ];
                    case 1:
                        joinedConfig = _a.sent().joinedConfig;
                        this.config = joinedConfig;
                        _a.label = 2;
                    case 2:
                        void this.recordEvents();
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplay.prototype.getSessionReplayProperties = function() {
        var _a;
        var config = this.config;
        var identifiers = this.identifiers;
        if (!config || !identifiers) {
            this.loggerProvider.warn('Session replay init has not been called, cannot get session replay properties.');
            return {};
        }
        var shouldRecord = this.getShouldRecord();
        var eventProperties = {};
        if (shouldRecord) {
            eventProperties = (_a = {}, _a[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_SESSION_REPLAY_PROPERTY"]] = identifiers.sessionReplayId ? identifiers.sessionReplayId : null, _a);
            if (config.debugMode) {
                eventProperties[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SESSION_REPLAY_DEBUG_PROPERTY"]] = JSON.stringify({
                    appHash: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateHashCode"])(config.apiKey).toString()
                });
            }
        }
        void this.addCustomRRWebEvent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomRRwebEvent"].GET_SR_PROPS, {
            shouldRecord: shouldRecord,
            eventProperties: eventProperties
        }, this.eventCount === 10);
        if (this.eventCount === 10) {
            this.eventCount = 0;
        }
        this.eventCount++;
        return eventProperties;
    };
    SessionReplay.prototype.sendEvents = function(sessionId) {
        var _a;
        var sessionIdToSend = sessionId || ((_a = this.identifiers) === null || _a === void 0 ? void 0 : _a.sessionId);
        var deviceId = this.getDeviceId();
        this.eventsManager && sessionIdToSend && deviceId && this.eventsManager.sendCurrentSequenceEvents({
            sessionId: sessionIdToSend,
            deviceId: deviceId
        });
    };
    SessionReplay.prototype.initialize = function(shouldSendStoredEvents) {
        var _a;
        if (shouldSendStoredEvents === void 0) {
            shouldSendStoredEvents = false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var deviceId;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
                if (!((_a = this.identifiers) === null || _a === void 0 ? void 0 : _a.sessionId)) {
                    this.loggerProvider.log("Session is not being recorded due to lack of session id.");
                    return [
                        2 /*return*/ ,
                        Promise.resolve()
                    ];
                }
                deviceId = this.getDeviceId();
                if (!deviceId) {
                    this.loggerProvider.log("Session is not being recorded due to lack of device id.");
                    return [
                        2 /*return*/ ,
                        Promise.resolve()
                    ];
                }
                this.eventsManager && shouldSendStoredEvents && void this.eventsManager.sendStoredEvents({
                    deviceId: deviceId
                });
                return [
                    2 /*return*/ ,
                    this.recordEvents()
                ];
            });
        });
    };
    SessionReplay.prototype.shouldOptOut = function() {
        var _a, _b;
        var identityStoreOptOut;
        if ((_a = this.config) === null || _a === void 0 ? void 0 : _a.instanceName) {
            var identityStore = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$analytics$2d$connector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAnalyticsConnector"])(this.config.instanceName).identityStore;
            identityStoreOptOut = identityStore.getIdentity().optOut;
        }
        return identityStoreOptOut !== undefined ? identityStoreOptOut : (_b = this.config) === null || _b === void 0 ? void 0 : _b.optOut;
    };
    SessionReplay.prototype.getShouldRecord = function() {
        if (!this.identifiers || !this.config || !this.identifiers.sessionId) {
            this.loggerProvider.warn("Session is not being recorded due to lack of config, please call sessionReplay.init.");
            return false;
        }
        if (!this.config.captureEnabled) {
            this.loggerProvider.log("Session ".concat(this.identifiers.sessionId, " not being captured due to capture being disabled for project or because the remote config could not be fetched."));
            return false;
        }
        if (this.shouldOptOut()) {
            this.loggerProvider.log("Opting session ".concat(this.identifiers.sessionId, " out of recording due to optOut config."));
            return false;
        }
        var isInSample = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isSessionInSample"])(this.identifiers.sessionId, this.config.sampleRate);
        if (!isInSample) {
            this.loggerProvider.log("Opting session ".concat(this.identifiers.sessionId, " out of recording due to sample rate."));
        }
        return isInSample;
    };
    SessionReplay.prototype.getBlockSelectors = function() {
        var _a, _b, _c;
        // For some reason, this defaults to empty array ([]) if undefined in the compiled script.
        // Empty arrays cause errors when being evaluated in Safari.
        // Force the selector to be undefined if it's an empty array.
        var blockSelector = (_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.privacyConfig) === null || _b === void 0 ? void 0 : _b.blockSelector) !== null && _c !== void 0 ? _c : [];
        if (blockSelector.length === 0) {
            return undefined;
        }
        return blockSelector;
    };
    SessionReplay.prototype.getMaskTextSelectors = function() {
        var _a, _b, _c, _d;
        if (((_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.privacyConfig) === null || _b === void 0 ? void 0 : _b.defaultMaskLevel) === 'conservative') {
            return '*';
        }
        var maskSelector = (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.privacyConfig) === null || _d === void 0 ? void 0 : _d.maskSelector;
        if (!maskSelector) {
            return;
        }
        return maskSelector;
    };
    SessionReplay.prototype.getRecordingPlugins = function(loggingConfig) {
        var _a;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var plugins, getRecordConsolePlugin, error_3;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
                switch(_b.label){
                    case 0:
                        plugins = [];
                        if (!((_a = loggingConfig === null || loggingConfig === void 0 ? void 0 : loggingConfig.console) === null || _a === void 0 ? void 0 : _a.enabled)) return [
                            3 /*break*/ ,
                            4
                        ];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            __turbopack_context__.r("[project]/node_modules/@amplitude/rrweb-plugin-console-record/dist/rrweb-plugin-console-record.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i)
                        ];
                    case 2:
                        getRecordConsolePlugin = _b.sent().getRecordConsolePlugin;
                        plugins.push(getRecordConsolePlugin({
                            level: loggingConfig.console.levels
                        }));
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 3:
                        error_3 = _b.sent();
                        this.loggerProvider.warn('Failed to load console plugin:', error_3);
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 4:
                        return [
                            2 /*return*/ ,
                            plugins.length > 0 ? plugins : undefined
                        ];
                }
            });
        });
    };
    SessionReplay.prototype.getRecordFunction = function() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var record, error_4;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (this.recordFunction) {
                            return [
                                2 /*return*/ ,
                                this.recordFunction
                            ];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            __turbopack_context__.r("[project]/node_modules/@amplitude/rrweb-record/dist/rrweb-record.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i)
                        ];
                    case 2:
                        record = _a.sent().record;
                        this.recordFunction = record;
                        return [
                            2 /*return*/ ,
                            record
                        ];
                    case 3:
                        error_4 = _a.sent();
                        this.loggerProvider.warn('Failed to load rrweb-record module:', error_4);
                        return [
                            2 /*return*/ ,
                            null
                        ];
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplay.prototype.recordEvents = function(shouldLogMetadata) {
        var _a, _b, _c;
        if (shouldLogMetadata === void 0) {
            shouldLogMetadata = true;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var config, shouldRecord, sessionId, recordFunction, privacyConfig, interactionConfig, loggingConfig, hooks, ugcFilterRules, _d, _e, error_5;
            var _f;
            var _this = this;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_g) {
                switch(_g.label){
                    case 0:
                        config = this.config;
                        shouldRecord = this.getShouldRecord();
                        sessionId = (_a = this.identifiers) === null || _a === void 0 ? void 0 : _a.sessionId;
                        if (!shouldRecord || !sessionId || !config) {
                            return [
                                2 /*return*/ 
                            ];
                        }
                        this.stopRecordingEvents();
                        return [
                            4 /*yield*/ ,
                            this.getRecordFunction()
                        ];
                    case 1:
                        recordFunction = _g.sent();
                        // May be undefined if cannot import rrweb-record
                        if (!recordFunction) {
                            return [
                                2 /*return*/ 
                            ];
                        }
                        return [
                            4 /*yield*/ ,
                            this.initializeNetworkObservers()
                        ];
                    case 2:
                        _g.sent();
                        (_b = this.networkObservers) === null || _b === void 0 ? void 0 : _b.start(function(event) {
                            void _this.addCustomRRWebEvent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomRRwebEvent"].FETCH_REQUEST, event);
                        });
                        privacyConfig = config.privacyConfig, interactionConfig = config.interactionConfig, loggingConfig = config.loggingConfig;
                        hooks = (interactionConfig === null || interactionConfig === void 0 ? void 0 : interactionConfig.enabled) ? {
                            mouseInteraction: this.eventsManager && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$hooks$2f$click$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["clickHook"])(this.loggerProvider, {
                                eventsManager: this.eventsManager,
                                sessionId: sessionId,
                                deviceIdFn: this.getDeviceId.bind(this),
                                mirror: recordFunction.mirror,
                                ugcFilterRules: (_c = interactionConfig.ugcFilterRules) !== null && _c !== void 0 ? _c : []
                            }),
                            scroll: this.scrollHook
                        } : {};
                        ugcFilterRules = (interactionConfig === null || interactionConfig === void 0 ? void 0 : interactionConfig.enabled) && interactionConfig.ugcFilterRules ? interactionConfig.ugcFilterRules : [];
                        this.loggerProvider.log("Session Replay capture beginning for ".concat(sessionId, "."));
                        _g.label = 3;
                    case 3:
                        _g.trys.push([
                            3,
                            5,
                            ,
                            6
                        ]);
                        _d = this;
                        _e = recordFunction;
                        _f = {
                            emit: function(event) {
                                if (_this.shouldOptOut()) {
                                    _this.loggerProvider.log("Opting session ".concat(sessionId, " out of recording due to optOut config."));
                                    _this.stopRecordingEvents();
                                    _this.sendEvents();
                                    return;
                                }
                                if (event.type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$rrweb$2d$types$2f$dist$2f$rrweb$2d$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventType"].Meta) {
                                    event.data.href = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPageUrl"])(event.data.href, ugcFilterRules);
                                }
                                if (_this.eventCompressor) {
                                    // Schedule processing during idle time if the browser supports requestIdleCallback
                                    _this.eventCompressor.enqueueEvent(event, sessionId);
                                }
                            },
                            inlineStylesheet: config.shouldInlineStylesheet,
                            hooks: hooks,
                            maskAllInputs: true,
                            maskTextClass: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MASK_TEXT_CLASS"],
                            blockClass: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BLOCK_CLASS"],
                            blockSelector: this.getBlockSelectors(),
                            applyBackgroundColorToBlockedElements: config.applyBackgroundColorToBlockedElements,
                            maskInputFn: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maskFn"])('input', privacyConfig),
                            maskTextFn: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maskFn"])('text', privacyConfig),
                            maskTextSelector: this.getMaskTextSelectors(),
                            recordCanvas: false,
                            errorHandler: function(error) {
                                var typedError = error;
                                // styled-components relies on this error being thrown and bubbled up, rrweb is otherwise suppressing it
                                if (typedError.message.includes('insertRule') && typedError.message.includes('CSSStyleSheet')) {
                                    throw typedError;
                                }
                                // rrweb does monkey patching on certain window functions such as CSSStyleSheet.proptype.insertRule,
                                // and errors from external clients calling these functions can get suppressed. Styled components depend
                                // on these errors being re-thrown.
                                if (typedError._external_) {
                                    throw typedError;
                                }
                                _this.loggerProvider.warn('Error while capturing replay: ', typedError.toString());
                                // Return true so that we don't clutter user's consoles with internal rrweb errors
                                return true;
                            }
                        };
                        return [
                            4 /*yield*/ ,
                            this.getRecordingPlugins(loggingConfig)
                        ];
                    case 4:
                        _d.recordCancelCallback = _e.apply(void 0, [
                            (_f.plugins = _g.sent(), _f)
                        ]);
                        void this.addCustomRRWebEvent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomRRwebEvent"].DEBUG_INFO);
                        if (shouldLogMetadata) {
                            void this.addCustomRRWebEvent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomRRwebEvent"].METADATA, this.metadata);
                        }
                        return [
                            3 /*break*/ ,
                            6
                        ];
                    case 5:
                        error_5 = _g.sent();
                        this.loggerProvider.warn('Failed to initialize session replay:', error_5);
                        return [
                            3 /*break*/ ,
                            6
                        ];
                    case 6:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    SessionReplay.prototype.getDeviceId = function() {
        var _a;
        return (_a = this.identifiers) === null || _a === void 0 ? void 0 : _a.deviceId;
    };
    SessionReplay.prototype.getSessionId = function() {
        var _a;
        return (_a = this.identifiers) === null || _a === void 0 ? void 0 : _a.sessionId;
    };
    SessionReplay.prototype.flush = function(useRetry) {
        var _a;
        if (useRetry === void 0) {
            useRetry = false;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_b) {
                return [
                    2 /*return*/ ,
                    (_a = this.eventsManager) === null || _a === void 0 ? void 0 : _a.flush(useRetry)
                ];
            });
        });
    };
    SessionReplay.prototype.shutdown = function() {
        this.teardownEventListeners(true);
        this.stopRecordingEvents();
        this.sendEvents();
    };
    SessionReplay.prototype.mapSDKType = function(sdkType) {
        if (sdkType === 'plugin') {
            return '@amplitude/plugin-session-replay-browser';
        }
        if (sdkType === 'segment') {
            return '@amplitude/segment-session-replay-plugin';
        }
        return null;
    };
    SessionReplay.prototype.setMetadata = function(sessionId, joinedConfig, localConfig, remoteConfig, replaySDKVersion, standaloneSDKVersion, sdkType) {
        var hashValue = (sessionId === null || sessionId === void 0 ? void 0 : sessionId.toString()) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$helpers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateHashCode"])(sessionId.toString()) : undefined;
        this.metadata = {
            joinedConfig: joinedConfig,
            localConfig: localConfig,
            remoteConfig: remoteConfig,
            sessionId: sessionId,
            hashValue: hashValue,
            sampleRate: joinedConfig.sampleRate,
            replaySDKType: this.mapSDKType(sdkType),
            replaySDKVersion: replaySDKVersion,
            standaloneSDKType: '@amplitude/session-replay-browser',
            standaloneSDKVersion: standaloneSDKVersion
        };
    };
    SessionReplay.prototype.initializeNetworkObservers = function() {
        var _a, _b, _c;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__awaiter"])(this, void 0, void 0, function() {
            var NetworkObserversClass, error_6;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tslib$2f$tslib$2e$es6$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__generator"])(this, function(_d) {
                switch(_d.label){
                    case 0:
                        if (!(((_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.loggingConfig) === null || _b === void 0 ? void 0 : _b.network) === null || _c === void 0 ? void 0 : _c.enabled) && !this.networkObservers)) return [
                            3 /*break*/ ,
                            4
                        ];
                        _d.label = 1;
                    case 1:
                        _d.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4 /*yield*/ ,
                            __turbopack_context__.r("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/observers.js [app-client] (ecmascript, async loader)")(__turbopack_context__.i)
                        ];
                    case 2:
                        NetworkObserversClass = _d.sent().NetworkObservers;
                        this.networkObservers = new NetworkObserversClass();
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 3:
                        error_6 = _d.sent();
                        this.loggerProvider.warn('Failed to import or instantiate NetworkObservers:', error_6);
                        return [
                            3 /*break*/ ,
                            4
                        ];
                    case 4:
                        return [
                            2 /*return*/ 
                        ];
                }
            });
        });
    };
    return SessionReplay;
}();
;
 //# sourceMappingURL=session-replay.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/session-replay-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>__TURBOPACK__default__export__),
    "getLogConfig": (()=>getLogConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/analytics-core/lib/esm/utils/debug.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$local$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/config/local-config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/session-replay.js [app-client] (ecmascript)");
;
;
;
var getLogConfig = function(sessionReplay) {
    return function() {
        var config = sessionReplay.config;
        var _a = config || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$config$2f$local$2d$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getDefaultConfig"])(), logger = _a.loggerProvider, logLevel = _a.logLevel;
        return {
            logger: logger,
            logLevel: logLevel
        };
    };
};
var createInstance = function() {
    var sessionReplay = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SessionReplay"]();
    return {
        init: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.init.bind(sessionReplay), 'init', getLogConfig(sessionReplay)),
        setSessionId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.setSessionId.bind(sessionReplay), 'setSessionId', getLogConfig(sessionReplay)),
        getSessionId: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.getSessionId.bind(sessionReplay), 'getSessionId', getLogConfig(sessionReplay)),
        getSessionReplayProperties: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.getSessionReplayProperties.bind(sessionReplay), 'getSessionReplayProperties', getLogConfig(sessionReplay)),
        flush: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.flush.bind(sessionReplay), 'flush', getLogConfig(sessionReplay)),
        shutdown: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$analytics$2d$core$2f$lib$2f$esm$2f$utils$2f$debug$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["debugWrapper"])(sessionReplay.shutdown.bind(sessionReplay), 'shutdown', getLogConfig(sessionReplay))
    };
};
const __TURBOPACK__default__export__ = createInstance();
 //# sourceMappingURL=session-replay-factory.js.map
}}),
"[project]/node_modules/@amplitude/session-replay-browser/lib/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "flush": (()=>flush),
    "getSessionId": (()=>getSessionId),
    "getSessionReplayProperties": (()=>getSessionReplayProperties),
    "init": (()=>init),
    "setSessionId": (()=>setSessionId),
    "shutdown": (()=>shutdown)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@amplitude/session-replay-browser/lib/esm/session-replay-factory.js [app-client] (ecmascript)");
;
var init = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].init, setSessionId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].setSessionId, getSessionId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getSessionId, getSessionReplayProperties = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].getSessionReplayProperties, flush = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].flush, shutdown = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$amplitude$2f$session$2d$replay$2d$browser$2f$lib$2f$esm$2f$session$2d$replay$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].shutdown;
;
 //# sourceMappingURL=index.js.map
}}),
}]);

//# sourceMappingURL=node_modules_%40amplitude_session-replay-browser_lib_esm_37de55eb._.js.map